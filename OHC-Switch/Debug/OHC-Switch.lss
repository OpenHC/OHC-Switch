
OHC-Switch.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007e  00800100  000011a0  00001234  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011a0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000112  0080017e  0080017e  000012b2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000012b2  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000250  00000000  00000000  0000130e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000240d  00000000  00000000  0000155e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004d0  00000000  00000000  0000396b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000014d4  00000000  00000000  00003e3b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000007bc  00000000  00000000  00005310  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000099b1  00000000  00000000  00005acc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00002523  00000000  00000000  0000f47d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000278  00000000  00000000  000119a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00000b55  00000000  00000000  00011c18  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
       2:	ac c3       	rjmp	.+1880   	; 0x75c <__vector_1>
       4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
       6:	31 c0       	rjmp	.+98     	; 0x6a <__bad_interrupt>
       8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
       a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
       c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
       e:	2d c0       	rjmp	.+90     	; 0x6a <__bad_interrupt>
      10:	2c c0       	rjmp	.+88     	; 0x6a <__bad_interrupt>
      12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
      14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
      16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
      18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
      1a:	27 c0       	rjmp	.+78     	; 0x6a <__bad_interrupt>
      1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
      1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
      20:	c4 c4       	rjmp	.+2440   	; 0x9aa <__vector_16>
      22:	23 c0       	rjmp	.+70     	; 0x6a <__bad_interrupt>
      24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
      26:	2a c1       	rjmp	.+596    	; 0x27c <__vector_19>
      28:	d2 c0       	rjmp	.+420    	; 0x1ce <__vector_20>
      2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
      2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
      2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
      30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
      32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
      34:	11 24       	eor	r1, r1
      36:	1f be       	out	0x3f, r1	; 63
      38:	cf ef       	ldi	r28, 0xFF	; 255
      3a:	d4 e0       	ldi	r29, 0x04	; 4
      3c:	de bf       	out	0x3e, r29	; 62
      3e:	cd bf       	out	0x3d, r28	; 61

00000040 <__do_copy_data>:
      40:	11 e0       	ldi	r17, 0x01	; 1
      42:	a0 e0       	ldi	r26, 0x00	; 0
      44:	b1 e0       	ldi	r27, 0x01	; 1
      46:	e0 ea       	ldi	r30, 0xA0	; 160
      48:	f1 e1       	ldi	r31, 0x11	; 17
      4a:	02 c0       	rjmp	.+4      	; 0x50 <__do_copy_data+0x10>
      4c:	05 90       	lpm	r0, Z+
      4e:	0d 92       	st	X+, r0
      50:	ae 37       	cpi	r26, 0x7E	; 126
      52:	b1 07       	cpc	r27, r17
      54:	d9 f7       	brne	.-10     	; 0x4c <__do_copy_data+0xc>

00000056 <__do_clear_bss>:
      56:	22 e0       	ldi	r18, 0x02	; 2
      58:	ae e7       	ldi	r26, 0x7E	; 126
      5a:	b1 e0       	ldi	r27, 0x01	; 1
      5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
      5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
      60:	a0 39       	cpi	r26, 0x90	; 144
      62:	b2 07       	cpc	r27, r18
      64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
      66:	d8 d3       	rcall	.+1968   	; 0x818 <main>
      68:	99 c8       	rjmp	.-3790   	; 0xfffff19c <__eeprom_end+0xff7ef19c>

0000006a <__bad_interrupt>:
      6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <uart_init>:
	memcpy(packptr, data + offset, length);
	NRF24L01_send_data(packet, WIRELESS_PACK_LEN);
	free(packet);
	core_remote_NRF.sending = TRUE;
	return CORE_OK;
}
      6c:	89 e1       	ldi	r24, 0x19	; 25
      6e:	90 e0       	ldi	r25, 0x00	; 0
      70:	90 93 c5 00 	sts	0x00C5, r25
      74:	80 93 c4 00 	sts	0x00C4, r24
      78:	8e e0       	ldi	r24, 0x0E	; 14
      7a:	80 93 c2 00 	sts	0x00C2, r24
      7e:	08 95       	ret

00000080 <uart_init_tx>:
      80:	e1 ec       	ldi	r30, 0xC1	; 193
      82:	f0 e0       	ldi	r31, 0x00	; 0
      84:	80 81       	ld	r24, Z
      86:	88 64       	ori	r24, 0x48	; 72
      88:	80 83       	st	Z, r24
      8a:	08 95       	ret

0000008c <uart_send_byte>:
      8c:	e0 91 06 01 	lds	r30, 0x0106
      90:	f0 91 07 01 	lds	r31, 0x0107
      94:	81 93       	st	Z+, r24
      96:	82 e0       	ldi	r24, 0x02	; 2
      98:	e9 38       	cpi	r30, 0x89	; 137
      9a:	f8 07       	cpc	r31, r24
      9c:	10 f0       	brcs	.+4      	; 0xa2 <uart_send_byte+0x16>
      9e:	e9 e8       	ldi	r30, 0x89	; 137
      a0:	f1 e0       	ldi	r31, 0x01	; 1
      a2:	20 91 06 01 	lds	r18, 0x0106
      a6:	30 91 07 01 	lds	r19, 0x0107
      aa:	80 91 08 01 	lds	r24, 0x0108
      ae:	90 91 09 01 	lds	r25, 0x0109
      b2:	28 17       	cp	r18, r24
      b4:	39 07       	cpc	r19, r25
      b6:	29 f4       	brne	.+10     	; 0xc2 <uart_send_byte+0x36>
      b8:	a1 ec       	ldi	r26, 0xC1	; 193
      ba:	b0 e0       	ldi	r27, 0x00	; 0
      bc:	8c 91       	ld	r24, X
      be:	80 62       	ori	r24, 0x20	; 32
      c0:	8c 93       	st	X, r24
      c2:	f0 93 07 01 	sts	0x0107, r31
      c6:	e0 93 06 01 	sts	0x0106, r30
      ca:	80 91 85 01 	lds	r24, 0x0185
      ce:	90 91 86 01 	lds	r25, 0x0186
      d2:	a0 91 87 01 	lds	r26, 0x0187
      d6:	b0 91 88 01 	lds	r27, 0x0188
      da:	01 96       	adiw	r24, 0x01	; 1
      dc:	a1 1d       	adc	r26, r1
      de:	b1 1d       	adc	r27, r1
      e0:	80 93 85 01 	sts	0x0185, r24
      e4:	90 93 86 01 	sts	0x0186, r25
      e8:	a0 93 87 01 	sts	0x0187, r26
      ec:	b0 93 88 01 	sts	0x0188, r27
      f0:	08 95       	ret

000000f2 <uart_send_async>:
      f2:	0f 93       	push	r16
      f4:	1f 93       	push	r17
      f6:	cf 93       	push	r28
      f8:	df 93       	push	r29
      fa:	ea 01       	movw	r28, r20
      fc:	e1 ec       	ldi	r30, 0xC1	; 193
      fe:	f0 e0       	ldi	r31, 0x00	; 0
     100:	20 81       	ld	r18, Z
     102:	2f 7b       	andi	r18, 0xBF	; 191
     104:	20 83       	st	Z, r18
     106:	8c 01       	movw	r16, r24
     108:	06 0f       	add	r16, r22
     10a:	17 1f       	adc	r17, r23
     10c:	20 97       	sbiw	r28, 0x00	; 0
     10e:	39 f0       	breq	.+14     	; 0x11e <uart_send_async+0x2c>
     110:	f8 01       	movw	r30, r16
     112:	81 91       	ld	r24, Z+
     114:	8f 01       	movw	r16, r30
     116:	ba df       	rcall	.-140    	; 0x8c <uart_send_byte>
     118:	21 97       	sbiw	r28, 0x01	; 1
     11a:	20 97       	sbiw	r28, 0x00	; 0
     11c:	c9 f7       	brne	.-14     	; 0x110 <uart_send_async+0x1e>
     11e:	e1 ec       	ldi	r30, 0xC1	; 193
     120:	f0 e0       	ldi	r31, 0x00	; 0
     122:	80 81       	ld	r24, Z
     124:	80 64       	ori	r24, 0x40	; 64
     126:	80 83       	st	Z, r24
     128:	df 91       	pop	r29
     12a:	cf 91       	pop	r28
     12c:	1f 91       	pop	r17
     12e:	0f 91       	pop	r16
     130:	08 95       	ret

00000132 <uart_write_async>:
     132:	cf 93       	push	r28
     134:	df 93       	push	r29
     136:	ec 01       	movw	r28, r24
     138:	e1 ec       	ldi	r30, 0xC1	; 193
     13a:	f0 e0       	ldi	r31, 0x00	; 0
     13c:	80 81       	ld	r24, Z
     13e:	8f 7b       	andi	r24, 0xBF	; 191
     140:	80 83       	st	Z, r24
     142:	88 81       	ld	r24, Y
     144:	88 23       	and	r24, r24
     146:	29 f0       	breq	.+10     	; 0x152 <uart_write_async+0x20>
     148:	21 96       	adiw	r28, 0x01	; 1
     14a:	a0 df       	rcall	.-192    	; 0x8c <uart_send_byte>
     14c:	89 91       	ld	r24, Y+
     14e:	81 11       	cpse	r24, r1
     150:	fc cf       	rjmp	.-8      	; 0x14a <uart_write_async+0x18>
     152:	e1 ec       	ldi	r30, 0xC1	; 193
     154:	f0 e0       	ldi	r31, 0x00	; 0
     156:	80 81       	ld	r24, Z
     158:	80 64       	ori	r24, 0x40	; 64
     15a:	80 83       	st	Z, r24
     15c:	df 91       	pop	r29
     15e:	cf 91       	pop	r28
     160:	08 95       	ret

00000162 <uart_irq_tx>:
     162:	e0 91 08 01 	lds	r30, 0x0108
     166:	f0 91 09 01 	lds	r31, 0x0109
     16a:	80 91 06 01 	lds	r24, 0x0106
     16e:	90 91 07 01 	lds	r25, 0x0107
     172:	e8 17       	cp	r30, r24
     174:	f9 07       	cpc	r31, r25
     176:	51 f1       	breq	.+84     	; 0x1cc <uart_irq_tx+0x6a>
     178:	80 81       	ld	r24, Z
     17a:	80 93 c6 00 	sts	0x00C6, r24
     17e:	80 91 08 01 	lds	r24, 0x0108
     182:	90 91 09 01 	lds	r25, 0x0109
     186:	01 96       	adiw	r24, 0x01	; 1
     188:	22 e0       	ldi	r18, 0x02	; 2
     18a:	89 38       	cpi	r24, 0x89	; 137
     18c:	92 07       	cpc	r25, r18
     18e:	28 f4       	brcc	.+10     	; 0x19a <uart_irq_tx+0x38>
     190:	90 93 09 01 	sts	0x0109, r25
     194:	80 93 08 01 	sts	0x0108, r24
     198:	06 c0       	rjmp	.+12     	; 0x1a6 <uart_irq_tx+0x44>
     19a:	89 e8       	ldi	r24, 0x89	; 137
     19c:	91 e0       	ldi	r25, 0x01	; 1
     19e:	90 93 09 01 	sts	0x0109, r25
     1a2:	80 93 08 01 	sts	0x0108, r24
     1a6:	80 91 85 01 	lds	r24, 0x0185
     1aa:	90 91 86 01 	lds	r25, 0x0186
     1ae:	a0 91 87 01 	lds	r26, 0x0187
     1b2:	b0 91 88 01 	lds	r27, 0x0188
     1b6:	01 97       	sbiw	r24, 0x01	; 1
     1b8:	a1 09       	sbc	r26, r1
     1ba:	b1 09       	sbc	r27, r1
     1bc:	80 93 85 01 	sts	0x0185, r24
     1c0:	90 93 86 01 	sts	0x0186, r25
     1c4:	a0 93 87 01 	sts	0x0187, r26
     1c8:	b0 93 88 01 	sts	0x0188, r27
     1cc:	08 95       	ret

000001ce <__vector_20>:
     1ce:	1f 92       	push	r1
     1d0:	0f 92       	push	r0
     1d2:	0f b6       	in	r0, 0x3f	; 63
     1d4:	0f 92       	push	r0
     1d6:	11 24       	eor	r1, r1
     1d8:	2f 93       	push	r18
     1da:	3f 93       	push	r19
     1dc:	4f 93       	push	r20
     1de:	5f 93       	push	r21
     1e0:	6f 93       	push	r22
     1e2:	7f 93       	push	r23
     1e4:	8f 93       	push	r24
     1e6:	9f 93       	push	r25
     1e8:	af 93       	push	r26
     1ea:	bf 93       	push	r27
     1ec:	ef 93       	push	r30
     1ee:	ff 93       	push	r31
     1f0:	b8 df       	rcall	.-144    	; 0x162 <uart_irq_tx>
     1f2:	ff 91       	pop	r31
     1f4:	ef 91       	pop	r30
     1f6:	bf 91       	pop	r27
     1f8:	af 91       	pop	r26
     1fa:	9f 91       	pop	r25
     1fc:	8f 91       	pop	r24
     1fe:	7f 91       	pop	r23
     200:	6f 91       	pop	r22
     202:	5f 91       	pop	r21
     204:	4f 91       	pop	r20
     206:	3f 91       	pop	r19
     208:	2f 91       	pop	r18
     20a:	0f 90       	pop	r0
     20c:	0f be       	out	0x3f, r0	; 63
     20e:	0f 90       	pop	r0
     210:	1f 90       	pop	r1
     212:	18 95       	reti

00000214 <uart_irq_udre>:
     214:	e0 91 08 01 	lds	r30, 0x0108
     218:	f0 91 09 01 	lds	r31, 0x0109
     21c:	80 81       	ld	r24, Z
     21e:	80 93 c6 00 	sts	0x00C6, r24
     222:	80 91 08 01 	lds	r24, 0x0108
     226:	90 91 09 01 	lds	r25, 0x0109
     22a:	01 96       	adiw	r24, 0x01	; 1
     22c:	22 e0       	ldi	r18, 0x02	; 2
     22e:	89 38       	cpi	r24, 0x89	; 137
     230:	92 07       	cpc	r25, r18
     232:	28 f4       	brcc	.+10     	; 0x23e <uart_irq_udre+0x2a>
     234:	90 93 09 01 	sts	0x0109, r25
     238:	80 93 08 01 	sts	0x0108, r24
     23c:	06 c0       	rjmp	.+12     	; 0x24a <uart_irq_udre+0x36>
     23e:	89 e8       	ldi	r24, 0x89	; 137
     240:	91 e0       	ldi	r25, 0x01	; 1
     242:	90 93 09 01 	sts	0x0109, r25
     246:	80 93 08 01 	sts	0x0108, r24
     24a:	e1 ec       	ldi	r30, 0xC1	; 193
     24c:	f0 e0       	ldi	r31, 0x00	; 0
     24e:	80 81       	ld	r24, Z
     250:	8f 7d       	andi	r24, 0xDF	; 223
     252:	80 83       	st	Z, r24
     254:	80 91 85 01 	lds	r24, 0x0185
     258:	90 91 86 01 	lds	r25, 0x0186
     25c:	a0 91 87 01 	lds	r26, 0x0187
     260:	b0 91 88 01 	lds	r27, 0x0188
     264:	01 97       	sbiw	r24, 0x01	; 1
     266:	a1 09       	sbc	r26, r1
     268:	b1 09       	sbc	r27, r1
     26a:	80 93 85 01 	sts	0x0185, r24
     26e:	90 93 86 01 	sts	0x0186, r25
     272:	a0 93 87 01 	sts	0x0187, r26
     276:	b0 93 88 01 	sts	0x0188, r27
     27a:	08 95       	ret

0000027c <__vector_19>:
     27c:	1f 92       	push	r1
     27e:	0f 92       	push	r0
     280:	0f b6       	in	r0, 0x3f	; 63
     282:	0f 92       	push	r0
     284:	11 24       	eor	r1, r1
     286:	2f 93       	push	r18
     288:	3f 93       	push	r19
     28a:	4f 93       	push	r20
     28c:	5f 93       	push	r21
     28e:	6f 93       	push	r22
     290:	7f 93       	push	r23
     292:	8f 93       	push	r24
     294:	9f 93       	push	r25
     296:	af 93       	push	r26
     298:	bf 93       	push	r27
     29a:	ef 93       	push	r30
     29c:	ff 93       	push	r31
     29e:	ba df       	rcall	.-140    	; 0x214 <uart_irq_udre>
     2a0:	ff 91       	pop	r31
     2a2:	ef 91       	pop	r30
     2a4:	bf 91       	pop	r27
     2a6:	af 91       	pop	r26
     2a8:	9f 91       	pop	r25
     2aa:	8f 91       	pop	r24
     2ac:	7f 91       	pop	r23
     2ae:	6f 91       	pop	r22
     2b0:	5f 91       	pop	r21
     2b2:	4f 91       	pop	r20
     2b4:	3f 91       	pop	r19
     2b6:	2f 91       	pop	r18
     2b8:	0f 90       	pop	r0
     2ba:	0f be       	out	0x3f, r0	; 63
     2bc:	0f 90       	pop	r0
     2be:	1f 90       	pop	r1
     2c0:	18 95       	reti

000002c2 <spi_init>:
     2c2:	84 b1       	in	r24, 0x04	; 4
     2c4:	83 7c       	andi	r24, 0xC3	; 195
     2c6:	84 b9       	out	0x04, r24	; 4
     2c8:	84 b1       	in	r24, 0x04	; 4
     2ca:	8c 62       	ori	r24, 0x2C	; 44
     2cc:	84 b9       	out	0x04, r24	; 4
     2ce:	80 e5       	ldi	r24, 0x50	; 80
     2d0:	8c bd       	out	0x2c, r24	; 44
     2d2:	81 e0       	ldi	r24, 0x01	; 1
     2d4:	8d bd       	out	0x2d, r24	; 45
     2d6:	08 95       	ret

000002d8 <spi_transfer_sync>:
     2d8:	44 23       	and	r20, r20
     2da:	81 f0       	breq	.+32     	; 0x2fc <spi_transfer_sync+0x24>
     2dc:	28 2f       	mov	r18, r24
     2de:	a6 2f       	mov	r26, r22
     2e0:	b7 2f       	mov	r27, r23
     2e2:	e8 2f       	mov	r30, r24
     2e4:	f9 2f       	mov	r31, r25
     2e6:	81 91       	ld	r24, Z+
     2e8:	8e bd       	out	0x2e, r24	; 46
     2ea:	0d b4       	in	r0, 0x2d	; 45
     2ec:	07 fe       	sbrs	r0, 7
     2ee:	fd cf       	rjmp	.-6      	; 0x2ea <spi_transfer_sync+0x12>
     2f0:	8e b5       	in	r24, 0x2e	; 46
     2f2:	8d 93       	st	X+, r24
     2f4:	8e 2f       	mov	r24, r30
     2f6:	82 1b       	sub	r24, r18
     2f8:	84 17       	cp	r24, r20
     2fa:	a8 f3       	brcs	.-22     	; 0x2e6 <spi_transfer_sync+0xe>
     2fc:	08 95       	ret

000002fe <spi_transmit_sync>:
     2fe:	66 23       	and	r22, r22
     300:	61 f0       	breq	.+24     	; 0x31a <spi_transmit_sync+0x1c>
     302:	28 2f       	mov	r18, r24
     304:	e8 2f       	mov	r30, r24
     306:	f9 2f       	mov	r31, r25
     308:	81 91       	ld	r24, Z+
     30a:	8e bd       	out	0x2e, r24	; 46
     30c:	0d b4       	in	r0, 0x2d	; 45
     30e:	07 fe       	sbrs	r0, 7
     310:	fd cf       	rjmp	.-6      	; 0x30c <spi_transmit_sync+0xe>
     312:	8e 2f       	mov	r24, r30
     314:	82 1b       	sub	r24, r18
     316:	86 17       	cp	r24, r22
     318:	b8 f3       	brcs	.-18     	; 0x308 <spi_transmit_sync+0xa>
     31a:	08 95       	ret

0000031c <spi_fast_shift>:
     31c:	8e bd       	out	0x2e, r24	; 46
     31e:	0d b4       	in	r0, 0x2d	; 45
     320:	07 fe       	sbrs	r0, 7
     322:	fd cf       	rjmp	.-6      	; 0x31e <spi_fast_shift+0x2>
     324:	8e b5       	in	r24, 0x2e	; 46
     326:	08 95       	ret

00000328 <NRF24L01_flush_rx>:
     328:	29 98       	cbi	0x05, 1	; 5
     32a:	82 ee       	ldi	r24, 0xE2	; 226
     32c:	f7 df       	rcall	.-18     	; 0x31c <spi_fast_shift>
     32e:	29 9a       	sbi	0x05, 1	; 5
     330:	08 95       	ret

00000332 <NRF24L01_flush_tx>:
     332:	29 98       	cbi	0x05, 1	; 5
     334:	81 ee       	ldi	r24, 0xE1	; 225
     336:	f2 df       	rcall	.-28     	; 0x31c <spi_fast_shift>
     338:	29 9a       	sbi	0x05, 1	; 5
     33a:	08 95       	ret

0000033c <NRF24L01_LOW_init_IO>:
     33c:	20 9a       	sbi	0x04, 0	; 4
     33e:	21 9a       	sbi	0x04, 1	; 4
     340:	28 98       	cbi	0x05, 0	; 5
     342:	29 9a       	sbi	0x05, 1	; 5
     344:	08 95       	ret

00000346 <NRF24L01_LOW_set_register>:
     346:	cf 93       	push	r28
     348:	c6 2f       	mov	r28, r22
     34a:	29 98       	cbi	0x05, 1	; 5
     34c:	80 62       	ori	r24, 0x20	; 32
     34e:	e6 df       	rcall	.-52     	; 0x31c <spi_fast_shift>
     350:	8c 2f       	mov	r24, r28
     352:	e4 df       	rcall	.-56     	; 0x31c <spi_fast_shift>
     354:	29 9a       	sbi	0x05, 1	; 5
     356:	cf 91       	pop	r28
     358:	08 95       	ret

0000035a <NRF24L01_init>:
     35a:	cf 93       	push	r28
     35c:	df 93       	push	r29
     35e:	ee df       	rcall	.-36     	; 0x33c <NRF24L01_LOW_init_IO>
     360:	b0 df       	rcall	.-160    	; 0x2c2 <spi_init>
     362:	e2 df       	rcall	.-60     	; 0x328 <NRF24L01_flush_rx>
     364:	e6 df       	rcall	.-52     	; 0x332 <NRF24L01_flush_tx>
     366:	60 e7       	ldi	r22, 0x70	; 112
     368:	87 e0       	ldi	r24, 0x07	; 7
     36a:	ed df       	rcall	.-38     	; 0x346 <NRF24L01_LOW_set_register>
     36c:	81 e0       	ldi	r24, 0x01	; 1
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	26 d3       	rcall	.+1612   	; 0x9be <malloc>
     372:	ec 01       	movw	r28, r24
     374:	8f e0       	ldi	r24, 0x0F	; 15
     376:	88 83       	st	Y, r24
     378:	6f e0       	ldi	r22, 0x0F	; 15
     37a:	80 e0       	ldi	r24, 0x00	; 0
     37c:	e4 df       	rcall	.-56     	; 0x346 <NRF24L01_LOW_set_register>
     37e:	ce 01       	movw	r24, r28
     380:	b6 d3       	rcall	.+1900   	; 0xaee <free>
     382:	81 e0       	ldi	r24, 0x01	; 1
     384:	90 e0       	ldi	r25, 0x00	; 0
     386:	1b d3       	rcall	.+1590   	; 0x9be <malloc>
     388:	ec 01       	movw	r28, r24
     38a:	8a e2       	ldi	r24, 0x2A	; 42
     38c:	88 83       	st	Y, r24
     38e:	6a e2       	ldi	r22, 0x2A	; 42
     390:	85 e0       	ldi	r24, 0x05	; 5
     392:	d9 df       	rcall	.-78     	; 0x346 <NRF24L01_LOW_set_register>
     394:	ce 01       	movw	r24, r28
     396:	ab d3       	rcall	.+1878   	; 0xaee <free>
     398:	81 e0       	ldi	r24, 0x01	; 1
     39a:	90 e0       	ldi	r25, 0x00	; 0
     39c:	10 d3       	rcall	.+1568   	; 0x9be <malloc>
     39e:	ec 01       	movw	r28, r24
     3a0:	86 e0       	ldi	r24, 0x06	; 6
     3a2:	88 83       	st	Y, r24
     3a4:	66 e0       	ldi	r22, 0x06	; 6
     3a6:	cf df       	rcall	.-98     	; 0x346 <NRF24L01_LOW_set_register>
     3a8:	ce 01       	movw	r24, r28
     3aa:	a1 d3       	rcall	.+1858   	; 0xaee <free>
     3ac:	81 e0       	ldi	r24, 0x01	; 1
     3ae:	90 e0       	ldi	r25, 0x00	; 0
     3b0:	06 d3       	rcall	.+1548   	; 0x9be <malloc>
     3b2:	ec 01       	movw	r28, r24
     3b4:	68 81       	ld	r22, Y
     3b6:	60 7c       	andi	r22, 0xC0	; 192
     3b8:	60 62       	ori	r22, 0x20	; 32
     3ba:	68 83       	st	Y, r22
     3bc:	81 e1       	ldi	r24, 0x11	; 17
     3be:	c3 df       	rcall	.-122    	; 0x346 <NRF24L01_LOW_set_register>
     3c0:	68 81       	ld	r22, Y
     3c2:	82 e1       	ldi	r24, 0x12	; 18
     3c4:	c0 df       	rcall	.-128    	; 0x346 <NRF24L01_LOW_set_register>
     3c6:	ce 01       	movw	r24, r28
     3c8:	92 d3       	rcall	.+1828   	; 0xaee <free>
     3ca:	28 9a       	sbi	0x05, 0	; 5
     3cc:	df 91       	pop	r29
     3ce:	cf 91       	pop	r28
     3d0:	08 95       	ret

000003d2 <NRF24L01_get_received_data>:
     3d2:	1f 93       	push	r17
     3d4:	cf 93       	push	r28
     3d6:	df 93       	push	r29
     3d8:	ec 01       	movw	r28, r24
     3da:	16 2f       	mov	r17, r22
     3dc:	29 98       	cbi	0x05, 1	; 5
     3de:	81 e6       	ldi	r24, 0x61	; 97
     3e0:	9d df       	rcall	.-198    	; 0x31c <spi_fast_shift>
     3e2:	41 2f       	mov	r20, r17
     3e4:	be 01       	movw	r22, r28
     3e6:	ce 01       	movw	r24, r28
     3e8:	77 df       	rcall	.-274    	; 0x2d8 <spi_transfer_sync>
     3ea:	29 9a       	sbi	0x05, 1	; 5
     3ec:	60 e4       	ldi	r22, 0x40	; 64
     3ee:	87 e0       	ldi	r24, 0x07	; 7
     3f0:	aa df       	rcall	.-172    	; 0x346 <NRF24L01_LOW_set_register>
     3f2:	df 91       	pop	r29
     3f4:	cf 91       	pop	r28
     3f6:	1f 91       	pop	r17
     3f8:	08 95       	ret

000003fa <NRF24L01_LOW_write_register>:
     3fa:	1f 93       	push	r17
     3fc:	cf 93       	push	r28
     3fe:	df 93       	push	r29
     400:	eb 01       	movw	r28, r22
     402:	14 2f       	mov	r17, r20
     404:	29 98       	cbi	0x05, 1	; 5
     406:	80 62       	ori	r24, 0x20	; 32
     408:	89 df       	rcall	.-238    	; 0x31c <spi_fast_shift>
     40a:	61 2f       	mov	r22, r17
     40c:	ce 01       	movw	r24, r28
     40e:	77 df       	rcall	.-274    	; 0x2fe <spi_transmit_sync>
     410:	29 9a       	sbi	0x05, 1	; 5
     412:	df 91       	pop	r29
     414:	cf 91       	pop	r28
     416:	1f 91       	pop	r17
     418:	08 95       	ret

0000041a <NRF24L01_LOW_read_register>:
     41a:	1f 93       	push	r17
     41c:	cf 93       	push	r28
     41e:	df 93       	push	r29
     420:	eb 01       	movw	r28, r22
     422:	14 2f       	mov	r17, r20
     424:	29 98       	cbi	0x05, 1	; 5
     426:	7a df       	rcall	.-268    	; 0x31c <spi_fast_shift>
     428:	41 2f       	mov	r20, r17
     42a:	be 01       	movw	r22, r28
     42c:	ce 01       	movw	r24, r28
     42e:	54 df       	rcall	.-344    	; 0x2d8 <spi_transfer_sync>
     430:	29 9a       	sbi	0x05, 1	; 5
     432:	df 91       	pop	r29
     434:	cf 91       	pop	r28
     436:	1f 91       	pop	r17
     438:	08 95       	ret

0000043a <NRF24L01_LOW_get_register>:
     43a:	cf 93       	push	r28
     43c:	df 93       	push	r29
     43e:	1f 92       	push	r1
     440:	cd b7       	in	r28, 0x3d	; 61
     442:	de b7       	in	r29, 0x3e	; 62
     444:	41 e0       	ldi	r20, 0x01	; 1
     446:	be 01       	movw	r22, r28
     448:	6f 5f       	subi	r22, 0xFF	; 255
     44a:	7f 4f       	sbci	r23, 0xFF	; 255
     44c:	e6 df       	rcall	.-52     	; 0x41a <NRF24L01_LOW_read_register>
     44e:	89 81       	ldd	r24, Y+1	; 0x01
     450:	0f 90       	pop	r0
     452:	df 91       	pop	r29
     454:	cf 91       	pop	r28
     456:	08 95       	ret

00000458 <NRF24L01_data_ready>:
     458:	87 e1       	ldi	r24, 0x17	; 23
     45a:	ef df       	rcall	.-34     	; 0x43a <NRF24L01_LOW_get_register>
     45c:	80 95       	com	r24
     45e:	81 70       	andi	r24, 0x01	; 1
     460:	08 95       	ret

00000462 <NRF24L01_set_rx>:
     462:	80 e0       	ldi	r24, 0x00	; 0
     464:	ea df       	rcall	.-44     	; 0x43a <NRF24L01_LOW_get_register>
     466:	8f 77       	andi	r24, 0x7F	; 127
     468:	68 2f       	mov	r22, r24
     46a:	63 60       	ori	r22, 0x03	; 3
     46c:	80 e0       	ldi	r24, 0x00	; 0
     46e:	6b df       	rcall	.-298    	; 0x346 <NRF24L01_LOW_set_register>
     470:	28 9a       	sbi	0x05, 0	; 5
     472:	08 95       	ret

00000474 <NRF24L01_LOW_read_byte>:
     474:	29 98       	cbi	0x05, 1	; 5
     476:	52 df       	rcall	.-348    	; 0x31c <spi_fast_shift>
     478:	29 9a       	sbi	0x05, 1	; 5
     47a:	08 95       	ret

0000047c <NRF24L01_get_status>:
     47c:	8f ef       	ldi	r24, 0xFF	; 255
     47e:	fa cf       	rjmp	.-12     	; 0x474 <NRF24L01_LOW_read_byte>
     480:	08 95       	ret

00000482 <core_init>:
     482:	00 97       	sbiw	r24, 0x00	; 0
     484:	89 f0       	breq	.+34     	; 0x4a8 <core_init+0x26>
     486:	90 93 82 01 	sts	0x0182, r25
     48a:	80 93 81 01 	sts	0x0181, r24
     48e:	88 0f       	add	r24, r24
     490:	99 1f       	adc	r25, r25
     492:	95 d2       	rcall	.+1322   	; 0x9be <malloc>
     494:	9c 01       	movw	r18, r24
     496:	90 93 84 01 	sts	0x0184, r25
     49a:	80 93 83 01 	sts	0x0183, r24
     49e:	81 e0       	ldi	r24, 0x01	; 1
     4a0:	23 2b       	or	r18, r19
     4a2:	19 f0       	breq	.+6      	; 0x4aa <core_init+0x28>
     4a4:	80 e0       	ldi	r24, 0x00	; 0
     4a6:	08 95       	ret
     4a8:	80 e0       	ldi	r24, 0x00	; 0
     4aa:	08 95       	ret

000004ac <core_register_field>:
     4ac:	cf 92       	push	r12
     4ae:	df 92       	push	r13
     4b0:	ef 92       	push	r14
     4b2:	ff 92       	push	r15
     4b4:	0f 93       	push	r16
     4b6:	1f 93       	push	r17
     4b8:	cf 93       	push	r28
     4ba:	df 93       	push	r29
     4bc:	ec 01       	movw	r28, r24
     4be:	6b 01       	movw	r12, r22
     4c0:	7a 01       	movw	r14, r20
     4c2:	12 2f       	mov	r17, r18
     4c4:	80 91 81 01 	lds	r24, 0x0181
     4c8:	90 91 82 01 	lds	r25, 0x0182
     4cc:	c8 17       	cp	r28, r24
     4ce:	d9 07       	cpc	r29, r25
     4d0:	e0 f4       	brcc	.+56     	; 0x50a <__stack+0xb>
     4d2:	85 e0       	ldi	r24, 0x05	; 5
     4d4:	90 e0       	ldi	r25, 0x00	; 0
     4d6:	73 d2       	rcall	.+1254   	; 0x9be <malloc>
     4d8:	fc 01       	movw	r30, r24
     4da:	00 97       	sbiw	r24, 0x00	; 0
     4dc:	c1 f0       	breq	.+48     	; 0x50e <__stack+0xf>
     4de:	d1 82       	std	Z+1, r13	; 0x01
     4e0:	c0 82       	st	Z, r12
     4e2:	f3 82       	std	Z+3, r15	; 0x03
     4e4:	e2 82       	std	Z+2, r14	; 0x02
     4e6:	84 81       	ldd	r24, Z+4	; 0x04
     4e8:	10 fb       	bst	r17, 0
     4ea:	80 f9       	bld	r24, 0
     4ec:	00 fb       	bst	r16, 0
     4ee:	81 f9       	bld	r24, 1
     4f0:	84 83       	std	Z+4, r24	; 0x04
     4f2:	cc 0f       	add	r28, r28
     4f4:	dd 1f       	adc	r29, r29
     4f6:	80 91 83 01 	lds	r24, 0x0183
     4fa:	90 91 84 01 	lds	r25, 0x0184
     4fe:	c8 0f       	add	r28, r24
     500:	d9 1f       	adc	r29, r25
     502:	f9 83       	std	Y+1, r31	; 0x01
     504:	e8 83       	st	Y, r30
     506:	80 e0       	ldi	r24, 0x00	; 0
     508:	03 c0       	rjmp	.+6      	; 0x510 <__stack+0x11>
     50a:	82 e0       	ldi	r24, 0x02	; 2
     50c:	01 c0       	rjmp	.+2      	; 0x510 <__stack+0x11>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	df 91       	pop	r29
     512:	cf 91       	pop	r28
     514:	1f 91       	pop	r17
     516:	0f 91       	pop	r16
     518:	ff 90       	pop	r15
     51a:	ef 90       	pop	r14
     51c:	df 90       	pop	r13
     51e:	cf 90       	pop	r12
     520:	08 95       	ret

00000522 <core_read_field>:
     522:	db 01       	movw	r26, r22
     524:	e0 91 81 01 	lds	r30, 0x0181
     528:	f0 91 82 01 	lds	r31, 0x0182
     52c:	8e 17       	cp	r24, r30
     52e:	9f 07       	cpc	r25, r31
     530:	f0 f4       	brcc	.+60     	; 0x56e <core_read_field+0x4c>
     532:	88 0f       	add	r24, r24
     534:	99 1f       	adc	r25, r25
     536:	e0 91 83 01 	lds	r30, 0x0183
     53a:	f0 91 84 01 	lds	r31, 0x0184
     53e:	e8 0f       	add	r30, r24
     540:	f9 1f       	adc	r31, r25
     542:	01 90       	ld	r0, Z+
     544:	f0 81       	ld	r31, Z
     546:	e0 2d       	mov	r30, r0
     548:	30 97       	sbiw	r30, 0x00	; 0
     54a:	99 f0       	breq	.+38     	; 0x572 <core_read_field+0x50>
     54c:	82 81       	ldd	r24, Z+2	; 0x02
     54e:	93 81       	ldd	r25, Z+3	; 0x03
     550:	b9 01       	movw	r22, r18
     552:	64 0f       	add	r22, r20
     554:	75 1f       	adc	r23, r21
     556:	86 17       	cp	r24, r22
     558:	97 07       	cpc	r25, r23
     55a:	68 f0       	brcs	.+26     	; 0x576 <core_read_field+0x54>
     55c:	60 81       	ld	r22, Z
     55e:	71 81       	ldd	r23, Z+1	; 0x01
     560:	64 0f       	add	r22, r20
     562:	75 1f       	adc	r23, r21
     564:	a9 01       	movw	r20, r18
     566:	cd 01       	movw	r24, r26
     568:	51 d3       	rcall	.+1698   	; 0xc0c <memcpy>
     56a:	80 e0       	ldi	r24, 0x00	; 0
     56c:	08 95       	ret
     56e:	82 e0       	ldi	r24, 0x02	; 2
     570:	08 95       	ret
     572:	83 e0       	ldi	r24, 0x03	; 3
     574:	08 95       	ret
     576:	84 e0       	ldi	r24, 0x04	; 4
     578:	08 95       	ret

0000057a <callback>:
     57a:	ef 92       	push	r14
     57c:	ff 92       	push	r15
     57e:	0f 93       	push	r16
     580:	1f 93       	push	r17
     582:	cf 93       	push	r28
     584:	df 93       	push	r29
     586:	1f 92       	push	r1
     588:	cd b7       	in	r28, 0x3d	; 61
     58a:	de b7       	in	r29, 0x3e	; 62
     58c:	7c 01       	movw	r14, r24
     58e:	8f e0       	ldi	r24, 0x0F	; 15
     590:	91 e0       	ldi	r25, 0x01	; 1
     592:	cf dd       	rcall	.-1122   	; 0x132 <uart_write_async>
     594:	85 e0       	ldi	r24, 0x05	; 5
     596:	90 e0       	ldi	r25, 0x00	; 0
     598:	12 d2       	rcall	.+1060   	; 0x9be <malloc>
     59a:	8c 01       	movw	r16, r24
     59c:	25 e0       	ldi	r18, 0x05	; 5
     59e:	30 e0       	ldi	r19, 0x00	; 0
     5a0:	40 e0       	ldi	r20, 0x00	; 0
     5a2:	50 e0       	ldi	r21, 0x00	; 0
     5a4:	bc 01       	movw	r22, r24
     5a6:	c7 01       	movw	r24, r14
     5a8:	bc df       	rcall	.-136    	; 0x522 <core_read_field>
     5aa:	45 e0       	ldi	r20, 0x05	; 5
     5ac:	50 e0       	ldi	r21, 0x00	; 0
     5ae:	60 e0       	ldi	r22, 0x00	; 0
     5b0:	70 e0       	ldi	r23, 0x00	; 0
     5b2:	c8 01       	movw	r24, r16
     5b4:	9e dd       	rcall	.-1220   	; 0xf2 <uart_send_async>
     5b6:	89 e6       	ldi	r24, 0x69	; 105
     5b8:	91 e0       	ldi	r25, 0x01	; 1
     5ba:	bb dd       	rcall	.-1162   	; 0x132 <uart_write_async>
     5bc:	c8 01       	movw	r24, r16
     5be:	97 d2       	rcall	.+1326   	; 0xaee <free>
     5c0:	ef 28       	or	r14, r15
     5c2:	89 f4       	brne	.+34     	; 0x5e6 <callback+0x6c>
     5c4:	19 82       	std	Y+1, r1	; 0x01
     5c6:	21 e0       	ldi	r18, 0x01	; 1
     5c8:	30 e0       	ldi	r19, 0x00	; 0
     5ca:	40 e0       	ldi	r20, 0x00	; 0
     5cc:	50 e0       	ldi	r21, 0x00	; 0
     5ce:	be 01       	movw	r22, r28
     5d0:	6f 5f       	subi	r22, 0xFF	; 255
     5d2:	7f 4f       	sbci	r23, 0xFF	; 255
     5d4:	80 e0       	ldi	r24, 0x00	; 0
     5d6:	90 e0       	ldi	r25, 0x00	; 0
     5d8:	a4 df       	rcall	.-184    	; 0x522 <core_read_field>
     5da:	89 81       	ldd	r24, Y+1	; 0x01
     5dc:	88 23       	and	r24, r24
     5de:	11 f0       	breq	.+4      	; 0x5e4 <callback+0x6a>
     5e0:	40 9a       	sbi	0x08, 0	; 8
     5e2:	01 c0       	rjmp	.+2      	; 0x5e6 <callback+0x6c>
     5e4:	40 98       	cbi	0x08, 0	; 8
     5e6:	0f 90       	pop	r0
     5e8:	df 91       	pop	r29
     5ea:	cf 91       	pop	r28
     5ec:	1f 91       	pop	r17
     5ee:	0f 91       	pop	r16
     5f0:	ff 90       	pop	r15
     5f2:	ef 90       	pop	r14
     5f4:	08 95       	ret

000005f6 <core_write_field_ext>:
     5f6:	cf 93       	push	r28
     5f8:	df 93       	push	r29
     5fa:	ec 01       	movw	r28, r24
     5fc:	80 91 81 01 	lds	r24, 0x0181
     600:	90 91 82 01 	lds	r25, 0x0182
     604:	c8 17       	cp	r28, r24
     606:	d9 07       	cpc	r29, r25
     608:	30 f5       	brcc	.+76     	; 0x656 <core_write_field_ext+0x60>
     60a:	e0 91 83 01 	lds	r30, 0x0183
     60e:	f0 91 84 01 	lds	r31, 0x0184
     612:	ce 01       	movw	r24, r28
     614:	88 0f       	add	r24, r24
     616:	99 1f       	adc	r25, r25
     618:	e8 0f       	add	r30, r24
     61a:	f9 1f       	adc	r31, r25
     61c:	01 90       	ld	r0, Z+
     61e:	f0 81       	ld	r31, Z
     620:	e0 2d       	mov	r30, r0
     622:	30 97       	sbiw	r30, 0x00	; 0
     624:	d1 f0       	breq	.+52     	; 0x65a <core_write_field_ext+0x64>
     626:	84 81       	ldd	r24, Z+4	; 0x04
     628:	81 ff       	sbrs	r24, 1
     62a:	19 c0       	rjmp	.+50     	; 0x65e <core_write_field_ext+0x68>
     62c:	82 81       	ldd	r24, Z+2	; 0x02
     62e:	93 81       	ldd	r25, Z+3	; 0x03
     630:	82 17       	cp	r24, r18
     632:	93 07       	cpc	r25, r19
     634:	b0 f0       	brcs	.+44     	; 0x662 <core_write_field_ext+0x6c>
     636:	64 0f       	add	r22, r20
     638:	75 1f       	adc	r23, r21
     63a:	a9 01       	movw	r20, r18
     63c:	80 81       	ld	r24, Z
     63e:	91 81       	ldd	r25, Z+1	; 0x01
     640:	e5 d2       	rcall	.+1482   	; 0xc0c <memcpy>
     642:	e0 91 89 02 	lds	r30, 0x0289
     646:	f0 91 8a 02 	lds	r31, 0x028A
     64a:	30 97       	sbiw	r30, 0x00	; 0
     64c:	61 f0       	breq	.+24     	; 0x666 <core_write_field_ext+0x70>
     64e:	ce 01       	movw	r24, r28
     650:	09 95       	icall
     652:	80 e0       	ldi	r24, 0x00	; 0
     654:	09 c0       	rjmp	.+18     	; 0x668 <core_write_field_ext+0x72>
     656:	82 e0       	ldi	r24, 0x02	; 2
     658:	07 c0       	rjmp	.+14     	; 0x668 <core_write_field_ext+0x72>
     65a:	83 e0       	ldi	r24, 0x03	; 3
     65c:	05 c0       	rjmp	.+10     	; 0x668 <core_write_field_ext+0x72>
     65e:	85 e0       	ldi	r24, 0x05	; 5
     660:	03 c0       	rjmp	.+6      	; 0x668 <core_write_field_ext+0x72>
     662:	84 e0       	ldi	r24, 0x04	; 4
     664:	01 c0       	rjmp	.+2      	; 0x668 <core_write_field_ext+0x72>
     666:	80 e0       	ldi	r24, 0x00	; 0
     668:	df 91       	pop	r29
     66a:	cf 91       	pop	r28
     66c:	08 95       	ret

0000066e <core_remote_init>:
     66e:	ef 92       	push	r14
     670:	ff 92       	push	r15
     672:	1f 93       	push	r17
     674:	cf 93       	push	r28
     676:	df 93       	push	r29
     678:	ec 01       	movw	r28, r24
     67a:	16 2f       	mov	r17, r22
     67c:	80 91 8b 02 	lds	r24, 0x028B
     680:	8e 7f       	andi	r24, 0xFE	; 254
     682:	8d 7f       	andi	r24, 0xFD	; 253
     684:	80 93 8b 02 	sts	0x028B, r24
     688:	82 e0       	ldi	r24, 0x02	; 2
     68a:	80 93 69 00 	sts	0x0069, r24
     68e:	81 e0       	ldi	r24, 0x01	; 1
     690:	8d bb       	out	0x1d, r24	; 29
     692:	66 23       	and	r22, r22
     694:	09 f1       	breq	.+66     	; 0x6d8 <core_remote_init+0x6a>
     696:	66 30       	cpi	r22, 0x06	; 6
     698:	08 f5       	brcc	.+66     	; 0x6dc <core_remote_init+0x6e>
     69a:	e6 2e       	mov	r14, r22
     69c:	f1 2c       	mov	r15, r1
     69e:	c7 01       	movw	r24, r14
     6a0:	8e d1       	rcall	.+796    	; 0x9be <malloc>
     6a2:	90 93 80 01 	sts	0x0180, r25
     6a6:	80 93 7f 01 	sts	0x017F, r24
     6aa:	00 97       	sbiw	r24, 0x00	; 0
     6ac:	c9 f0       	breq	.+50     	; 0x6e0 <core_remote_init+0x72>
     6ae:	a7 01       	movw	r20, r14
     6b0:	be 01       	movw	r22, r28
     6b2:	ac d2       	rcall	.+1368   	; 0xc0c <memcpy>
     6b4:	10 93 7e 01 	sts	0x017E, r17
     6b8:	50 de       	rcall	.-864    	; 0x35a <NRF24L01_init>
     6ba:	2f ef       	ldi	r18, 0xFF	; 255
     6bc:	81 ee       	ldi	r24, 0xE1	; 225
     6be:	94 e0       	ldi	r25, 0x04	; 4
     6c0:	21 50       	subi	r18, 0x01	; 1
     6c2:	80 40       	sbci	r24, 0x00	; 0
     6c4:	90 40       	sbci	r25, 0x00	; 0
     6c6:	e1 f7       	brne	.-8      	; 0x6c0 <core_remote_init+0x52>
     6c8:	00 c0       	rjmp	.+0      	; 0x6ca <core_remote_init+0x5c>
     6ca:	00 00       	nop
     6cc:	41 2f       	mov	r20, r17
     6ce:	be 01       	movw	r22, r28
     6d0:	8b e0       	ldi	r24, 0x0B	; 11
     6d2:	93 de       	rcall	.-730    	; 0x3fa <NRF24L01_LOW_write_register>
     6d4:	80 e0       	ldi	r24, 0x00	; 0
     6d6:	05 c0       	rjmp	.+10     	; 0x6e2 <core_remote_init+0x74>
     6d8:	84 e6       	ldi	r24, 0x64	; 100
     6da:	03 c0       	rjmp	.+6      	; 0x6e2 <core_remote_init+0x74>
     6dc:	85 e6       	ldi	r24, 0x65	; 101
     6de:	01 c0       	rjmp	.+2      	; 0x6e2 <core_remote_init+0x74>
     6e0:	81 e0       	ldi	r24, 0x01	; 1
     6e2:	df 91       	pop	r29
     6e4:	cf 91       	pop	r28
     6e6:	1f 91       	pop	r17
     6e8:	ff 90       	pop	r15
     6ea:	ef 90       	pop	r14
     6ec:	08 95       	ret

000006ee <core_remote_main>:

//Call in main program loop. Handles data reception.
//Main program loop must use sleep functions and wake
//up on external interrupt
uint8_t core_remote_main(void)
{
     6ee:	ff 92       	push	r15
     6f0:	0f 93       	push	r16
     6f2:	1f 93       	push	r17
     6f4:	cf 93       	push	r28
     6f6:	df 93       	push	r29
	uint8_t exit_code = CORE_OK;
	if(core_remote_NRF.data_ready)
     6f8:	80 91 8b 02 	lds	r24, 0x028B
     6fc:	81 ff       	sbrs	r24, 1
     6fe:	25 c0       	rjmp	.+74     	; 0x74a <core_remote_main+0x5c>
	{
		uint8_t* data = malloc(WIRELESS_PACK_LEN);
     700:	80 e2       	ldi	r24, 0x20	; 32
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	5c d1       	rcall	.+696    	; 0x9be <malloc>
     706:	ec 01       	movw	r28, r24
		if(data == NULL)
     708:	00 97       	sbiw	r24, 0x00	; 0
     70a:	09 f1       	breq	.+66     	; 0x74e <core_remote_main+0x60>
			return CORE_ERROR_OUT_OF_MEM;
		NRF24L01_get_received_data(data, WIRELESS_PACK_LEN);
     70c:	60 e2       	ldi	r22, 0x20	; 32
     70e:	61 de       	rcall	.-830    	; 0x3d2 <NRF24L01_get_received_data>
		uint8_t* packptr = data;
		packptr += 5;
		uint8_t data_len = *packptr & 0b11111;
     710:	fd 80       	ldd	r15, Y+5	; 0x05
		uint8_t rw = *packptr & 0b100000; //Ignoring bit 6 and 7 so far
		packptr += 1;
		uint16_t id;
		memcpy(&id, packptr, 2);
     712:	0e 81       	ldd	r16, Y+6	; 0x06
     714:	1f 81       	ldd	r17, Y+7	; 0x07
		packptr += 2;
		core_remote_NRF.data_ready = NRF24L01_data_ready();
     716:	a0 de       	rcall	.-704    	; 0x458 <NRF24L01_data_ready>
     718:	90 91 8b 02 	lds	r25, 0x028B
     71c:	80 fb       	bst	r24, 0
     71e:	91 f9       	bld	r25, 1
     720:	90 93 8b 02 	sts	0x028B, r25
		if(rw)
     724:	f5 fe       	sbrs	r15, 5
     726:	0c c0       	rjmp	.+24     	; 0x740 <core_remote_main+0x52>
		if(data == NULL)
			return CORE_ERROR_OUT_OF_MEM;
		NRF24L01_get_received_data(data, WIRELESS_PACK_LEN);
		uint8_t* packptr = data;
		packptr += 5;
		uint8_t data_len = *packptr & 0b11111;
     728:	2f 2d       	mov	r18, r15
     72a:	2f 71       	andi	r18, 0x1F	; 31
		packptr += 2;
		core_remote_NRF.data_ready = NRF24L01_data_ready();
		if(rw)
		{
			//Write
			exit_code = core_write_field_ext(id, packptr, 0, data_len);
     72c:	30 e0       	ldi	r19, 0x00	; 0
     72e:	40 e0       	ldi	r20, 0x00	; 0
     730:	50 e0       	ldi	r21, 0x00	; 0
     732:	be 01       	movw	r22, r28
     734:	68 5f       	subi	r22, 0xF8	; 248
     736:	7f 4f       	sbci	r23, 0xFF	; 255
     738:	c8 01       	movw	r24, r16
     73a:	5d df       	rcall	.-326    	; 0x5f6 <core_write_field_ext>
     73c:	18 2f       	mov	r17, r24
     73e:	01 c0       	rjmp	.+2      	; 0x742 <core_remote_main+0x54>
//Call in main program loop. Handles data reception.
//Main program loop must use sleep functions and wake
//up on external interrupt
uint8_t core_remote_main(void)
{
	uint8_t exit_code = CORE_OK;
     740:	10 e0       	ldi	r17, 0x00	; 0
		}
		else
		{
			//Read	
		}
		free(data);
     742:	ce 01       	movw	r24, r28
     744:	d4 d1       	rcall	.+936    	; 0xaee <free>
     746:	81 2f       	mov	r24, r17
     748:	03 c0       	rjmp	.+6      	; 0x750 <core_remote_main+0x62>
//Call in main program loop. Handles data reception.
//Main program loop must use sleep functions and wake
//up on external interrupt
uint8_t core_remote_main(void)
{
	uint8_t exit_code = CORE_OK;
     74a:	80 e0       	ldi	r24, 0x00	; 0
     74c:	01 c0       	rjmp	.+2      	; 0x750 <core_remote_main+0x62>
	if(core_remote_NRF.data_ready)
	{
		uint8_t* data = malloc(WIRELESS_PACK_LEN);
		if(data == NULL)
			return CORE_ERROR_OUT_OF_MEM;
     74e:	81 e0       	ldi	r24, 0x01	; 1
			//Read	
		}
		free(data);
	}
	return exit_code;
}
     750:	df 91       	pop	r29
     752:	cf 91       	pop	r28
     754:	1f 91       	pop	r17
     756:	0f 91       	pop	r16
     758:	ff 90       	pop	r15
     75a:	08 95       	ret

0000075c <__vector_1>:

//NRF24L01 event handler. Sets flags for core_remote_main
ISR(INT0_vect)
{
     75c:	1f 92       	push	r1
     75e:	0f 92       	push	r0
     760:	0f b6       	in	r0, 0x3f	; 63
     762:	0f 92       	push	r0
     764:	11 24       	eor	r1, r1
     766:	2f 93       	push	r18
     768:	3f 93       	push	r19
     76a:	4f 93       	push	r20
     76c:	5f 93       	push	r21
     76e:	6f 93       	push	r22
     770:	7f 93       	push	r23
     772:	8f 93       	push	r24
     774:	9f 93       	push	r25
     776:	af 93       	push	r26
     778:	bf 93       	push	r27
     77a:	cf 93       	push	r28
     77c:	ef 93       	push	r30
     77e:	ff 93       	push	r31
	uint8_t status = NRF24L01_get_status();
     780:	7d de       	rcall	.-774    	; 0x47c <NRF24L01_get_status>
     782:	c8 2f       	mov	r28, r24
	if(status & NRF24L01_MASK_STATUS_TX_DS)
     784:	85 ff       	sbrs	r24, 5
     786:	06 c0       	rjmp	.+12     	; 0x794 <__vector_1+0x38>
	{
		NRF24L01_set_rx();
     788:	6c de       	rcall	.-808    	; 0x462 <NRF24L01_set_rx>
		core_remote_NRF.sending = FALSE;
     78a:	80 91 8b 02 	lds	r24, 0x028B
     78e:	8e 7f       	andi	r24, 0xFE	; 254
     790:	80 93 8b 02 	sts	0x028B, r24
	}
	if(status & NRF24L01_MASK_STATUS_RX_DR)
     794:	c6 ff       	sbrs	r28, 6
     796:	05 c0       	rjmp	.+10     	; 0x7a2 <__vector_1+0x46>
	{
		core_remote_NRF.data_ready = TRUE;
     798:	80 91 8b 02 	lds	r24, 0x028B
     79c:	82 60       	ori	r24, 0x02	; 2
     79e:	80 93 8b 02 	sts	0x028B, r24
	}
	NRF24L01_LOW_set_register(NRF24L01_REG_STATUS, status & (NRF24L01_MASK_STATUS_TX_DS | NRF24L01_MASK_STATUS_MAX_RT));
     7a2:	6c 2f       	mov	r22, r28
     7a4:	60 73       	andi	r22, 0x30	; 48
     7a6:	87 e0       	ldi	r24, 0x07	; 7
     7a8:	ce dd       	rcall	.-1124   	; 0x346 <NRF24L01_LOW_set_register>
	if(status & NRF24L01_MASK_STATUS_MAX_RT)
	{
		
	}
}
     7aa:	ff 91       	pop	r31
     7ac:	ef 91       	pop	r30
     7ae:	cf 91       	pop	r28
     7b0:	bf 91       	pop	r27
     7b2:	af 91       	pop	r26
     7b4:	9f 91       	pop	r25
     7b6:	8f 91       	pop	r24
     7b8:	7f 91       	pop	r23
     7ba:	6f 91       	pop	r22
     7bc:	5f 91       	pop	r21
     7be:	4f 91       	pop	r20
     7c0:	3f 91       	pop	r19
     7c2:	2f 91       	pop	r18
     7c4:	0f 90       	pop	r0
     7c6:	0f be       	out	0x3f, r0	; 63
     7c8:	0f 90       	pop	r0
     7ca:	1f 90       	pop	r1
     7cc:	18 95       	reti

000007ce <dump_config>:
		}
	}
}

void dump_config(uint8_t regaddr, uint8_t len)
{
     7ce:	ff 92       	push	r15
     7d0:	0f 93       	push	r16
     7d2:	1f 93       	push	r17
     7d4:	cf 93       	push	r28
     7d6:	df 93       	push	r29
     7d8:	c8 2f       	mov	r28, r24
     7da:	16 2f       	mov	r17, r22
	uint8_t* buff = malloc(len);
     7dc:	86 2f       	mov	r24, r22
     7de:	90 e0       	ldi	r25, 0x00	; 0
     7e0:	ee d0       	rcall	.+476    	; 0x9be <malloc>
     7e2:	f8 2e       	mov	r15, r24
     7e4:	09 2f       	mov	r16, r25
	uint8_t* buffptr = buff;
	NRF24L01_LOW_read_register(regaddr, buff, len);
     7e6:	41 2f       	mov	r20, r17
     7e8:	68 2f       	mov	r22, r24
     7ea:	79 2f       	mov	r23, r25
     7ec:	8c 2f       	mov	r24, r28
     7ee:	15 de       	rcall	.-982    	; 0x41a <NRF24L01_LOW_read_register>
	while(len-- > 0)
     7f0:	11 23       	and	r17, r17
     7f2:	31 f0       	breq	.+12     	; 0x800 <dump_config+0x32>
     7f4:	cf 2d       	mov	r28, r15
     7f6:	d0 2f       	mov	r29, r16
		uart_send_byte(*buffptr++);
     7f8:	89 91       	ld	r24, Y+
     7fa:	48 dc       	rcall	.-1904   	; 0x8c <uart_send_byte>
     7fc:	11 50       	subi	r17, 0x01	; 1
void dump_config(uint8_t regaddr, uint8_t len)
{
	uint8_t* buff = malloc(len);
	uint8_t* buffptr = buff;
	NRF24L01_LOW_read_register(regaddr, buff, len);
	while(len-- > 0)
     7fe:	e1 f7       	brne	.-8      	; 0x7f8 <dump_config+0x2a>
		uart_send_byte(*buffptr++);
	free(buff);
     800:	8f 2d       	mov	r24, r15
     802:	90 2f       	mov	r25, r16
     804:	74 d1       	rcall	.+744    	; 0xaee <free>
	uart_write_async("\n");
     806:	89 e6       	ldi	r24, 0x69	; 105
     808:	91 e0       	ldi	r25, 0x01	; 1
     80a:	93 dc       	rcall	.-1754   	; 0x132 <uart_write_async>
}
     80c:	df 91       	pop	r29
     80e:	cf 91       	pop	r28
     810:	1f 91       	pop	r17
     812:	0f 91       	pop	r16
     814:	ff 90       	pop	r15
     816:	08 95       	ret

00000818 <main>:

int main(void)
{
     818:	cf 93       	push	r28
     81a:	df 93       	push	r29
     81c:	00 d0       	rcall	.+0      	; 0x81e <main+0x6>
     81e:	00 d0       	rcall	.+0      	; 0x820 <main+0x8>
     820:	1f 92       	push	r1
     822:	cd b7       	in	r28, 0x3d	; 61
     824:	de b7       	in	r29, 0x3e	; 62
	DDRC = (1<<PINC0);
     826:	81 e0       	ldi	r24, 0x01	; 1
     828:	87 b9       	out	0x07, r24	; 7
	TCCR0B = (1<<CS02); //timer0: Prescaler = 256 => ~122 Hz
     82a:	94 e0       	ldi	r25, 0x04	; 4
     82c:	95 bd       	out	0x25, r25	; 37
	TIMSK0 = (1<<TOIE0); //timer0: Enable overflow interrupt
     82e:	80 93 6e 00 	sts	0x006E, r24
	uart_init();
     832:	1c dc       	rcall	.-1992   	; 0x6c <uart_init>
	uart_init_tx();
     834:	25 dc       	rcall	.-1974   	; 0x80 <uart_init_tx>
	sei();
     836:	78 94       	sei
	core_init(2);
     838:	82 e0       	ldi	r24, 0x02	; 2
     83a:	90 e0       	ldi	r25, 0x00	; 0
     83c:	22 de       	rcall	.-956    	; 0x482 <core_init>
	uint8_t* state = malloc(1);
     83e:	81 e0       	ldi	r24, 0x01	; 1
     840:	90 e0       	ldi	r25, 0x00	; 0
     842:	bd d0       	rcall	.+378    	; 0x9be <malloc>
	uint8_t exit_code = core_register_field(0, state, 1, TRUE, TRUE);
     844:	01 e0       	ldi	r16, 0x01	; 1
     846:	21 e0       	ldi	r18, 0x01	; 1
     848:	41 e0       	ldi	r20, 0x01	; 1
     84a:	50 e0       	ldi	r21, 0x00	; 0
     84c:	bc 01       	movw	r22, r24
     84e:	80 e0       	ldi	r24, 0x00	; 0
     850:	90 e0       	ldi	r25, 0x00	; 0
     852:	2c de       	rcall	.-936    	; 0x4ac <core_register_field>
     854:	f8 2e       	mov	r15, r24
	if(exit_code)
     856:	88 23       	and	r24, r24
     858:	d1 f0       	breq	.+52     	; 0x88e <main+0x76>
	{
		char* data = malloc(16);
     85a:	80 e1       	ldi	r24, 0x10	; 16
     85c:	90 e0       	ldi	r25, 0x00	; 0
     85e:	af d0       	rcall	.+350    	; 0x9be <malloc>
     860:	08 2f       	mov	r16, r24
     862:	19 2f       	mov	r17, r25
		sprintf(data, "REG_ERROR: %u\n", exit_code);
     864:	1f 92       	push	r1
     866:	ff 92       	push	r15
     868:	2c e1       	ldi	r18, 0x1C	; 28
     86a:	31 e0       	ldi	r19, 0x01	; 1
     86c:	3f 93       	push	r19
     86e:	2f 93       	push	r18
     870:	9f 93       	push	r25
     872:	8f 93       	push	r24
     874:	d4 d1       	rcall	.+936    	; 0xc1e <sprintf>
		uart_write_async(data);
     876:	80 2f       	mov	r24, r16
     878:	91 2f       	mov	r25, r17
     87a:	5b dc       	rcall	.-1866   	; 0x132 <uart_write_async>
		free(data);
     87c:	80 2f       	mov	r24, r16
     87e:	91 2f       	mov	r25, r17
     880:	36 d1       	rcall	.+620    	; 0xaee <free>
     882:	0f 90       	pop	r0
     884:	0f 90       	pop	r0
     886:	0f 90       	pop	r0
     888:	0f 90       	pop	r0
     88a:	0f 90       	pop	r0
     88c:	0f 90       	pop	r0
	}
	uint8_t* data = malloc(10);
     88e:	8a e0       	ldi	r24, 0x0A	; 10
     890:	90 e0       	ldi	r25, 0x00	; 0
     892:	95 d0       	rcall	.+298    	; 0x9be <malloc>
	exit_code = core_register_field(1, data, 10, TRUE, TRUE);
     894:	01 e0       	ldi	r16, 0x01	; 1
     896:	21 e0       	ldi	r18, 0x01	; 1
     898:	4a e0       	ldi	r20, 0x0A	; 10
     89a:	50 e0       	ldi	r21, 0x00	; 0
     89c:	bc 01       	movw	r22, r24
     89e:	81 e0       	ldi	r24, 0x01	; 1
     8a0:	90 e0       	ldi	r25, 0x00	; 0
     8a2:	04 de       	rcall	.-1016   	; 0x4ac <core_register_field>
     8a4:	f8 2e       	mov	r15, r24
	if(exit_code)
     8a6:	88 23       	and	r24, r24
     8a8:	d1 f0       	breq	.+52     	; 0x8de <main+0xc6>
	{
		char* data = malloc(16);
     8aa:	80 e1       	ldi	r24, 0x10	; 16
     8ac:	90 e0       	ldi	r25, 0x00	; 0
     8ae:	87 d0       	rcall	.+270    	; 0x9be <malloc>
     8b0:	08 2f       	mov	r16, r24
     8b2:	19 2f       	mov	r17, r25
		sprintf(data, "REG_ERROR: %u\n", exit_code);
     8b4:	1f 92       	push	r1
     8b6:	ff 92       	push	r15
     8b8:	2c e1       	ldi	r18, 0x1C	; 28
     8ba:	31 e0       	ldi	r19, 0x01	; 1
     8bc:	3f 93       	push	r19
     8be:	2f 93       	push	r18
     8c0:	9f 93       	push	r25
     8c2:	8f 93       	push	r24
     8c4:	ac d1       	rcall	.+856    	; 0xc1e <sprintf>
		uart_write_async(data);
     8c6:	80 2f       	mov	r24, r16
     8c8:	91 2f       	mov	r25, r17
     8ca:	33 dc       	rcall	.-1946   	; 0x132 <uart_write_async>
		free(data);
     8cc:	80 2f       	mov	r24, r16
     8ce:	91 2f       	mov	r25, r17
     8d0:	0e d1       	rcall	.+540    	; 0xaee <free>
     8d2:	0f 90       	pop	r0
     8d4:	0f 90       	pop	r0
     8d6:	0f 90       	pop	r0
     8d8:	0f 90       	pop	r0
     8da:	0f 90       	pop	r0
     8dc:	0f 90       	pop	r0
}

//Sets a callback function to get called on field writes
uint8_t core_set_write_callback(void (*callback)(uint16_t))
{
	core_write_callback = callback;
     8de:	8d eb       	ldi	r24, 0xBD	; 189
     8e0:	92 e0       	ldi	r25, 0x02	; 2
     8e2:	90 93 8a 02 	sts	0x028A, r25
     8e6:	80 93 89 02 	sts	0x0289, r24
	}
	core_set_write_callback(callback);
	uart_write_async("INIT_CORE: DONE\n");
     8ea:	8b e2       	ldi	r24, 0x2B	; 43
     8ec:	91 e0       	ldi	r25, 0x01	; 1
     8ee:	21 dc       	rcall	.-1982   	; 0x132 <uart_write_async>
		uint8_t addr_two[5] = {0x42, 0x42, 0x42, 0x42, 0x42};
		uart_write_async("INIT_REMOTE.RX_ADDR: 0x13 0x37 0x13 0x37 0x42\n");
		uart_write_async("INIT_REMOTE.TX_ADDR: 0x42 0x42 0x42 0x42 0x42\n");
	#endif
	#ifdef RX
		uint8_t addr_one[5] = {0x42, 0x42, 0x42, 0x42, 0x42};
     8f0:	85 e0       	ldi	r24, 0x05	; 5
     8f2:	ea e0       	ldi	r30, 0x0A	; 10
     8f4:	f1 e0       	ldi	r31, 0x01	; 1
     8f6:	de 01       	movw	r26, r28
     8f8:	11 96       	adiw	r26, 0x01	; 1
     8fa:	01 90       	ld	r0, Z+
     8fc:	0d 92       	st	X+, r0
     8fe:	8a 95       	dec	r24
     900:	e1 f7       	brne	.-8      	; 0x8fa <main+0xe2>
		//uint8_t addr_two[5] = {0x13, 0x37, 0x13, 0x37, 0x42};
		uart_write_async("INIT_REMOTE.RX_ADDR: 0x42 0x42 0x42 0x42 0x42\n");
     902:	8c e3       	ldi	r24, 0x3C	; 60
     904:	91 e0       	ldi	r25, 0x01	; 1
     906:	15 dc       	rcall	.-2006   	; 0x132 <uart_write_async>
	#endif
	core_remote_init(addr_one, 5);
     908:	65 e0       	ldi	r22, 0x05	; 5
     90a:	ce 01       	movw	r24, r28
     90c:	01 96       	adiw	r24, 0x01	; 1
     90e:	af de       	rcall	.-674    	; 0x66e <core_remote_init>
	uart_write_async("INIT_REMOTE: DONE\n");
     910:	8b e6       	ldi	r24, 0x6B	; 107
     912:	91 e0       	ldi	r25, 0x01	; 1
     914:	0e dc       	rcall	.-2020   	; 0x132 <uart_write_async>
	for(uint8_t i = 0; i <= 0x09; i++)
     916:	10 e0       	ldi	r17, 0x00	; 0
	{
		dump_config(i, 1);
     918:	61 e0       	ldi	r22, 0x01	; 1
     91a:	81 2f       	mov	r24, r17
     91c:	58 df       	rcall	.-336    	; 0x7ce <dump_config>
		//uint8_t addr_two[5] = {0x13, 0x37, 0x13, 0x37, 0x42};
		uart_write_async("INIT_REMOTE.RX_ADDR: 0x42 0x42 0x42 0x42 0x42\n");
	#endif
	core_remote_init(addr_one, 5);
	uart_write_async("INIT_REMOTE: DONE\n");
	for(uint8_t i = 0; i <= 0x09; i++)
     91e:	1f 5f       	subi	r17, 0xFF	; 255
     920:	1a 30       	cpi	r17, 0x0A	; 10
     922:	d1 f7       	brne	.-12     	; 0x918 <main+0x100>
	{
		dump_config(i, 1);
	}
	dump_config(0x0A, 5);
     924:	65 e0       	ldi	r22, 0x05	; 5
     926:	8a e0       	ldi	r24, 0x0A	; 10
     928:	52 df       	rcall	.-348    	; 0x7ce <dump_config>
	dump_config(0x0B, 5);
     92a:	65 e0       	ldi	r22, 0x05	; 5
     92c:	8b e0       	ldi	r24, 0x0B	; 11
     92e:	4f df       	rcall	.-354    	; 0x7ce <dump_config>
	for(uint8_t i = 0x0C; i <= 0x0F; i++)
     930:	1c e0       	ldi	r17, 0x0C	; 12
	{
		dump_config(i, 1);
     932:	61 e0       	ldi	r22, 0x01	; 1
     934:	81 2f       	mov	r24, r17
     936:	4b df       	rcall	.-362    	; 0x7ce <dump_config>
	{
		dump_config(i, 1);
	}
	dump_config(0x0A, 5);
	dump_config(0x0B, 5);
	for(uint8_t i = 0x0C; i <= 0x0F; i++)
     938:	1f 5f       	subi	r17, 0xFF	; 255
     93a:	10 31       	cpi	r17, 0x10	; 16
     93c:	d1 f7       	brne	.-12     	; 0x932 <main+0x11a>
	{
		dump_config(i, 1);
	}
	dump_config(0x10, 5);
     93e:	65 e0       	ldi	r22, 0x05	; 5
     940:	80 e1       	ldi	r24, 0x10	; 16
     942:	45 df       	rcall	.-374    	; 0x7ce <dump_config>
	for(uint8_t i = 0x11; i <= 0x17; i++)
     944:	11 e1       	ldi	r17, 0x11	; 17
	{
		dump_config(i, 1);
     946:	61 e0       	ldi	r22, 0x01	; 1
     948:	81 2f       	mov	r24, r17
     94a:	41 df       	rcall	.-382    	; 0x7ce <dump_config>
	for(uint8_t i = 0x0C; i <= 0x0F; i++)
	{
		dump_config(i, 1);
	}
	dump_config(0x10, 5);
	for(uint8_t i = 0x11; i <= 0x17; i++)
     94c:	1f 5f       	subi	r17, 0xFF	; 255
     94e:	18 31       	cpi	r17, 0x18	; 24
     950:	d1 f7       	brne	.-12     	; 0x946 <main+0x12e>
	{
		dump_config(i, 1);
	}
	dump_config(0x1C, 1);
     952:	61 e0       	ldi	r22, 0x01	; 1
     954:	8c e1       	ldi	r24, 0x1C	; 28
     956:	3b df       	rcall	.-394    	; 0x7ce <dump_config>
	dump_config(0x1D, 1);
     958:	61 e0       	ldi	r22, 0x01	; 1
     95a:	8d e1       	ldi	r24, 0x1D	; 29
     95c:	38 df       	rcall	.-400    	; 0x7ce <dump_config>
		#ifdef RX
			exit_code = core_remote_main();
			if(exit_code)
			{
				char* data = malloc(16);
				sprintf(data, "ERROR: %u\n", exit_code);
     95e:	00 e2       	ldi	r16, 0x20	; 32
     960:	11 e0       	ldi	r17, 0x01	; 1
		core_remote_write_field(addr_two, 5, 1, str, 0, 5);
		uart_write_async("TX: DATA WRITTEN\n");
	#endif
	while(1)
    {
        set_sleep_mode(SLEEP_MODE_IDLE);
     962:	83 b7       	in	r24, 0x33	; 51
     964:	81 7f       	andi	r24, 0xF1	; 241
     966:	83 bf       	out	0x33, r24	; 51
		sleep_enable();
     968:	83 b7       	in	r24, 0x33	; 51
     96a:	81 60       	ori	r24, 0x01	; 1
     96c:	83 bf       	out	0x33, r24	; 51
		sleep_cpu();
     96e:	88 95       	sleep
		#ifdef RX
			exit_code = core_remote_main();
     970:	be de       	rcall	.-644    	; 0x6ee <core_remote_main>
     972:	f8 2e       	mov	r15, r24
			if(exit_code)
     974:	88 23       	and	r24, r24
     976:	a9 f3       	breq	.-22     	; 0x962 <main+0x14a>
			{
				char* data = malloc(16);
     978:	80 e1       	ldi	r24, 0x10	; 16
     97a:	90 e0       	ldi	r25, 0x00	; 0
     97c:	20 d0       	rcall	.+64     	; 0x9be <malloc>
     97e:	d8 2e       	mov	r13, r24
     980:	e9 2e       	mov	r14, r25
				sprintf(data, "ERROR: %u\n", exit_code);
     982:	1f 92       	push	r1
     984:	ff 92       	push	r15
     986:	1f 93       	push	r17
     988:	0f 93       	push	r16
     98a:	9f 93       	push	r25
     98c:	8f 93       	push	r24
     98e:	47 d1       	rcall	.+654    	; 0xc1e <sprintf>
				uart_write_async(data);
     990:	8d 2d       	mov	r24, r13
     992:	9e 2d       	mov	r25, r14
     994:	ce db       	rcall	.-2148   	; 0x132 <uart_write_async>
				free(data);
     996:	8d 2d       	mov	r24, r13
     998:	9e 2d       	mov	r25, r14
     99a:	a9 d0       	rcall	.+338    	; 0xaee <free>
     99c:	0f 90       	pop	r0
     99e:	0f 90       	pop	r0
     9a0:	0f 90       	pop	r0
     9a2:	0f 90       	pop	r0
     9a4:	0f 90       	pop	r0
     9a6:	0f 90       	pop	r0
     9a8:	dc cf       	rjmp	.-72     	; 0x962 <main+0x14a>

000009aa <__vector_16>:
		#endif
    }
}

ISR(TIMER0_OVF_vect)
{
     9aa:	1f 92       	push	r1
     9ac:	0f 92       	push	r0
     9ae:	0f b6       	in	r0, 0x3f	; 63
     9b0:	0f 92       	push	r0
     9b2:	11 24       	eor	r1, r1
	
     9b4:	0f 90       	pop	r0
     9b6:	0f be       	out	0x3f, r0	; 63
     9b8:	0f 90       	pop	r0
     9ba:	1f 90       	pop	r1
     9bc:	18 95       	reti

000009be <malloc>:
     9be:	cf 93       	push	r28
     9c0:	df 93       	push	r29
     9c2:	82 30       	cpi	r24, 0x02	; 2
     9c4:	91 05       	cpc	r25, r1
     9c6:	10 f4       	brcc	.+4      	; 0x9cc <malloc+0xe>
     9c8:	82 e0       	ldi	r24, 0x02	; 2
     9ca:	90 e0       	ldi	r25, 0x00	; 0
     9cc:	e0 91 8e 02 	lds	r30, 0x028E
     9d0:	f0 91 8f 02 	lds	r31, 0x028F
     9d4:	20 e0       	ldi	r18, 0x00	; 0
     9d6:	30 e0       	ldi	r19, 0x00	; 0
     9d8:	a0 e0       	ldi	r26, 0x00	; 0
     9da:	b0 e0       	ldi	r27, 0x00	; 0
     9dc:	30 97       	sbiw	r30, 0x00	; 0
     9de:	39 f1       	breq	.+78     	; 0xa2e <malloc+0x70>
     9e0:	40 81       	ld	r20, Z
     9e2:	51 81       	ldd	r21, Z+1	; 0x01
     9e4:	48 17       	cp	r20, r24
     9e6:	59 07       	cpc	r21, r25
     9e8:	b8 f0       	brcs	.+46     	; 0xa18 <malloc+0x5a>
     9ea:	48 17       	cp	r20, r24
     9ec:	59 07       	cpc	r21, r25
     9ee:	71 f4       	brne	.+28     	; 0xa0c <malloc+0x4e>
     9f0:	82 81       	ldd	r24, Z+2	; 0x02
     9f2:	93 81       	ldd	r25, Z+3	; 0x03
     9f4:	10 97       	sbiw	r26, 0x00	; 0
     9f6:	29 f0       	breq	.+10     	; 0xa02 <malloc+0x44>
     9f8:	13 96       	adiw	r26, 0x03	; 3
     9fa:	9c 93       	st	X, r25
     9fc:	8e 93       	st	-X, r24
     9fe:	12 97       	sbiw	r26, 0x02	; 2
     a00:	2c c0       	rjmp	.+88     	; 0xa5a <malloc+0x9c>
     a02:	90 93 8f 02 	sts	0x028F, r25
     a06:	80 93 8e 02 	sts	0x028E, r24
     a0a:	27 c0       	rjmp	.+78     	; 0xa5a <malloc+0x9c>
     a0c:	21 15       	cp	r18, r1
     a0e:	31 05       	cpc	r19, r1
     a10:	31 f0       	breq	.+12     	; 0xa1e <malloc+0x60>
     a12:	42 17       	cp	r20, r18
     a14:	53 07       	cpc	r21, r19
     a16:	18 f0       	brcs	.+6      	; 0xa1e <malloc+0x60>
     a18:	a9 01       	movw	r20, r18
     a1a:	db 01       	movw	r26, r22
     a1c:	01 c0       	rjmp	.+2      	; 0xa20 <malloc+0x62>
     a1e:	ef 01       	movw	r28, r30
     a20:	9a 01       	movw	r18, r20
     a22:	bd 01       	movw	r22, r26
     a24:	df 01       	movw	r26, r30
     a26:	02 80       	ldd	r0, Z+2	; 0x02
     a28:	f3 81       	ldd	r31, Z+3	; 0x03
     a2a:	e0 2d       	mov	r30, r0
     a2c:	d7 cf       	rjmp	.-82     	; 0x9dc <malloc+0x1e>
     a2e:	21 15       	cp	r18, r1
     a30:	31 05       	cpc	r19, r1
     a32:	f9 f0       	breq	.+62     	; 0xa72 <malloc+0xb4>
     a34:	28 1b       	sub	r18, r24
     a36:	39 0b       	sbc	r19, r25
     a38:	24 30       	cpi	r18, 0x04	; 4
     a3a:	31 05       	cpc	r19, r1
     a3c:	80 f4       	brcc	.+32     	; 0xa5e <malloc+0xa0>
     a3e:	8a 81       	ldd	r24, Y+2	; 0x02
     a40:	9b 81       	ldd	r25, Y+3	; 0x03
     a42:	61 15       	cp	r22, r1
     a44:	71 05       	cpc	r23, r1
     a46:	21 f0       	breq	.+8      	; 0xa50 <malloc+0x92>
     a48:	fb 01       	movw	r30, r22
     a4a:	93 83       	std	Z+3, r25	; 0x03
     a4c:	82 83       	std	Z+2, r24	; 0x02
     a4e:	04 c0       	rjmp	.+8      	; 0xa58 <malloc+0x9a>
     a50:	90 93 8f 02 	sts	0x028F, r25
     a54:	80 93 8e 02 	sts	0x028E, r24
     a58:	fe 01       	movw	r30, r28
     a5a:	32 96       	adiw	r30, 0x02	; 2
     a5c:	44 c0       	rjmp	.+136    	; 0xae6 <malloc+0x128>
     a5e:	fe 01       	movw	r30, r28
     a60:	e2 0f       	add	r30, r18
     a62:	f3 1f       	adc	r31, r19
     a64:	81 93       	st	Z+, r24
     a66:	91 93       	st	Z+, r25
     a68:	22 50       	subi	r18, 0x02	; 2
     a6a:	31 09       	sbc	r19, r1
     a6c:	39 83       	std	Y+1, r19	; 0x01
     a6e:	28 83       	st	Y, r18
     a70:	3a c0       	rjmp	.+116    	; 0xae6 <malloc+0x128>
     a72:	20 91 8c 02 	lds	r18, 0x028C
     a76:	30 91 8d 02 	lds	r19, 0x028D
     a7a:	23 2b       	or	r18, r19
     a7c:	41 f4       	brne	.+16     	; 0xa8e <malloc+0xd0>
     a7e:	20 91 02 01 	lds	r18, 0x0102
     a82:	30 91 03 01 	lds	r19, 0x0103
     a86:	30 93 8d 02 	sts	0x028D, r19
     a8a:	20 93 8c 02 	sts	0x028C, r18
     a8e:	20 91 00 01 	lds	r18, 0x0100
     a92:	30 91 01 01 	lds	r19, 0x0101
     a96:	21 15       	cp	r18, r1
     a98:	31 05       	cpc	r19, r1
     a9a:	41 f4       	brne	.+16     	; 0xaac <malloc+0xee>
     a9c:	2d b7       	in	r18, 0x3d	; 61
     a9e:	3e b7       	in	r19, 0x3e	; 62
     aa0:	40 91 04 01 	lds	r20, 0x0104
     aa4:	50 91 05 01 	lds	r21, 0x0105
     aa8:	24 1b       	sub	r18, r20
     aaa:	35 0b       	sbc	r19, r21
     aac:	e0 91 8c 02 	lds	r30, 0x028C
     ab0:	f0 91 8d 02 	lds	r31, 0x028D
     ab4:	e2 17       	cp	r30, r18
     ab6:	f3 07       	cpc	r31, r19
     ab8:	a0 f4       	brcc	.+40     	; 0xae2 <malloc+0x124>
     aba:	2e 1b       	sub	r18, r30
     abc:	3f 0b       	sbc	r19, r31
     abe:	28 17       	cp	r18, r24
     ac0:	39 07       	cpc	r19, r25
     ac2:	78 f0       	brcs	.+30     	; 0xae2 <malloc+0x124>
     ac4:	ac 01       	movw	r20, r24
     ac6:	4e 5f       	subi	r20, 0xFE	; 254
     ac8:	5f 4f       	sbci	r21, 0xFF	; 255
     aca:	24 17       	cp	r18, r20
     acc:	35 07       	cpc	r19, r21
     ace:	48 f0       	brcs	.+18     	; 0xae2 <malloc+0x124>
     ad0:	4e 0f       	add	r20, r30
     ad2:	5f 1f       	adc	r21, r31
     ad4:	50 93 8d 02 	sts	0x028D, r21
     ad8:	40 93 8c 02 	sts	0x028C, r20
     adc:	81 93       	st	Z+, r24
     ade:	91 93       	st	Z+, r25
     ae0:	02 c0       	rjmp	.+4      	; 0xae6 <malloc+0x128>
     ae2:	e0 e0       	ldi	r30, 0x00	; 0
     ae4:	f0 e0       	ldi	r31, 0x00	; 0
     ae6:	cf 01       	movw	r24, r30
     ae8:	df 91       	pop	r29
     aea:	cf 91       	pop	r28
     aec:	08 95       	ret

00000aee <free>:
     aee:	cf 93       	push	r28
     af0:	df 93       	push	r29
     af2:	00 97       	sbiw	r24, 0x00	; 0
     af4:	09 f4       	brne	.+2      	; 0xaf8 <free+0xa>
     af6:	87 c0       	rjmp	.+270    	; 0xc06 <free+0x118>
     af8:	fc 01       	movw	r30, r24
     afa:	32 97       	sbiw	r30, 0x02	; 2
     afc:	13 82       	std	Z+3, r1	; 0x03
     afe:	12 82       	std	Z+2, r1	; 0x02
     b00:	c0 91 8e 02 	lds	r28, 0x028E
     b04:	d0 91 8f 02 	lds	r29, 0x028F
     b08:	20 97       	sbiw	r28, 0x00	; 0
     b0a:	81 f4       	brne	.+32     	; 0xb2c <free+0x3e>
     b0c:	20 81       	ld	r18, Z
     b0e:	31 81       	ldd	r19, Z+1	; 0x01
     b10:	28 0f       	add	r18, r24
     b12:	39 1f       	adc	r19, r25
     b14:	80 91 8c 02 	lds	r24, 0x028C
     b18:	90 91 8d 02 	lds	r25, 0x028D
     b1c:	82 17       	cp	r24, r18
     b1e:	93 07       	cpc	r25, r19
     b20:	79 f5       	brne	.+94     	; 0xb80 <free+0x92>
     b22:	f0 93 8d 02 	sts	0x028D, r31
     b26:	e0 93 8c 02 	sts	0x028C, r30
     b2a:	6d c0       	rjmp	.+218    	; 0xc06 <free+0x118>
     b2c:	de 01       	movw	r26, r28
     b2e:	20 e0       	ldi	r18, 0x00	; 0
     b30:	30 e0       	ldi	r19, 0x00	; 0
     b32:	ae 17       	cp	r26, r30
     b34:	bf 07       	cpc	r27, r31
     b36:	50 f4       	brcc	.+20     	; 0xb4c <free+0x5e>
     b38:	12 96       	adiw	r26, 0x02	; 2
     b3a:	4d 91       	ld	r20, X+
     b3c:	5c 91       	ld	r21, X
     b3e:	13 97       	sbiw	r26, 0x03	; 3
     b40:	9d 01       	movw	r18, r26
     b42:	41 15       	cp	r20, r1
     b44:	51 05       	cpc	r21, r1
     b46:	09 f1       	breq	.+66     	; 0xb8a <free+0x9c>
     b48:	da 01       	movw	r26, r20
     b4a:	f3 cf       	rjmp	.-26     	; 0xb32 <free+0x44>
     b4c:	b3 83       	std	Z+3, r27	; 0x03
     b4e:	a2 83       	std	Z+2, r26	; 0x02
     b50:	40 81       	ld	r20, Z
     b52:	51 81       	ldd	r21, Z+1	; 0x01
     b54:	84 0f       	add	r24, r20
     b56:	95 1f       	adc	r25, r21
     b58:	8a 17       	cp	r24, r26
     b5a:	9b 07       	cpc	r25, r27
     b5c:	71 f4       	brne	.+28     	; 0xb7a <free+0x8c>
     b5e:	8d 91       	ld	r24, X+
     b60:	9c 91       	ld	r25, X
     b62:	11 97       	sbiw	r26, 0x01	; 1
     b64:	84 0f       	add	r24, r20
     b66:	95 1f       	adc	r25, r21
     b68:	02 96       	adiw	r24, 0x02	; 2
     b6a:	91 83       	std	Z+1, r25	; 0x01
     b6c:	80 83       	st	Z, r24
     b6e:	12 96       	adiw	r26, 0x02	; 2
     b70:	8d 91       	ld	r24, X+
     b72:	9c 91       	ld	r25, X
     b74:	13 97       	sbiw	r26, 0x03	; 3
     b76:	93 83       	std	Z+3, r25	; 0x03
     b78:	82 83       	std	Z+2, r24	; 0x02
     b7a:	21 15       	cp	r18, r1
     b7c:	31 05       	cpc	r19, r1
     b7e:	29 f4       	brne	.+10     	; 0xb8a <free+0x9c>
     b80:	f0 93 8f 02 	sts	0x028F, r31
     b84:	e0 93 8e 02 	sts	0x028E, r30
     b88:	3e c0       	rjmp	.+124    	; 0xc06 <free+0x118>
     b8a:	d9 01       	movw	r26, r18
     b8c:	13 96       	adiw	r26, 0x03	; 3
     b8e:	fc 93       	st	X, r31
     b90:	ee 93       	st	-X, r30
     b92:	12 97       	sbiw	r26, 0x02	; 2
     b94:	4d 91       	ld	r20, X+
     b96:	5d 91       	ld	r21, X+
     b98:	a4 0f       	add	r26, r20
     b9a:	b5 1f       	adc	r27, r21
     b9c:	ea 17       	cp	r30, r26
     b9e:	fb 07       	cpc	r31, r27
     ba0:	79 f4       	brne	.+30     	; 0xbc0 <free+0xd2>
     ba2:	80 81       	ld	r24, Z
     ba4:	91 81       	ldd	r25, Z+1	; 0x01
     ba6:	84 0f       	add	r24, r20
     ba8:	95 1f       	adc	r25, r21
     baa:	02 96       	adiw	r24, 0x02	; 2
     bac:	d9 01       	movw	r26, r18
     bae:	11 96       	adiw	r26, 0x01	; 1
     bb0:	9c 93       	st	X, r25
     bb2:	8e 93       	st	-X, r24
     bb4:	82 81       	ldd	r24, Z+2	; 0x02
     bb6:	93 81       	ldd	r25, Z+3	; 0x03
     bb8:	13 96       	adiw	r26, 0x03	; 3
     bba:	9c 93       	st	X, r25
     bbc:	8e 93       	st	-X, r24
     bbe:	12 97       	sbiw	r26, 0x02	; 2
     bc0:	e0 e0       	ldi	r30, 0x00	; 0
     bc2:	f0 e0       	ldi	r31, 0x00	; 0
     bc4:	8a 81       	ldd	r24, Y+2	; 0x02
     bc6:	9b 81       	ldd	r25, Y+3	; 0x03
     bc8:	00 97       	sbiw	r24, 0x00	; 0
     bca:	19 f0       	breq	.+6      	; 0xbd2 <free+0xe4>
     bcc:	fe 01       	movw	r30, r28
     bce:	ec 01       	movw	r28, r24
     bd0:	f9 cf       	rjmp	.-14     	; 0xbc4 <free+0xd6>
     bd2:	ce 01       	movw	r24, r28
     bd4:	02 96       	adiw	r24, 0x02	; 2
     bd6:	28 81       	ld	r18, Y
     bd8:	39 81       	ldd	r19, Y+1	; 0x01
     bda:	82 0f       	add	r24, r18
     bdc:	93 1f       	adc	r25, r19
     bde:	20 91 8c 02 	lds	r18, 0x028C
     be2:	30 91 8d 02 	lds	r19, 0x028D
     be6:	28 17       	cp	r18, r24
     be8:	39 07       	cpc	r19, r25
     bea:	69 f4       	brne	.+26     	; 0xc06 <free+0x118>
     bec:	30 97       	sbiw	r30, 0x00	; 0
     bee:	29 f4       	brne	.+10     	; 0xbfa <free+0x10c>
     bf0:	10 92 8f 02 	sts	0x028F, r1
     bf4:	10 92 8e 02 	sts	0x028E, r1
     bf8:	02 c0       	rjmp	.+4      	; 0xbfe <free+0x110>
     bfa:	13 82       	std	Z+3, r1	; 0x03
     bfc:	12 82       	std	Z+2, r1	; 0x02
     bfe:	d0 93 8d 02 	sts	0x028D, r29
     c02:	c0 93 8c 02 	sts	0x028C, r28
     c06:	df 91       	pop	r29
     c08:	cf 91       	pop	r28
     c0a:	08 95       	ret

00000c0c <memcpy>:
     c0c:	fb 01       	movw	r30, r22
     c0e:	dc 01       	movw	r26, r24
     c10:	02 c0       	rjmp	.+4      	; 0xc16 <memcpy+0xa>
     c12:	01 90       	ld	r0, Z+
     c14:	0d 92       	st	X+, r0
     c16:	41 50       	subi	r20, 0x01	; 1
     c18:	50 40       	sbci	r21, 0x00	; 0
     c1a:	d8 f7       	brcc	.-10     	; 0xc12 <memcpy+0x6>
     c1c:	08 95       	ret

00000c1e <sprintf>:
     c1e:	ae e0       	ldi	r26, 0x0E	; 14
     c20:	b0 e0       	ldi	r27, 0x00	; 0
     c22:	e4 e1       	ldi	r30, 0x14	; 20
     c24:	f6 e0       	ldi	r31, 0x06	; 6
     c26:	91 c2       	rjmp	.+1314   	; 0x114a <__prologue_saves__+0x1c>
     c28:	0d 89       	ldd	r16, Y+21	; 0x15
     c2a:	1e 89       	ldd	r17, Y+22	; 0x16
     c2c:	86 e0       	ldi	r24, 0x06	; 6
     c2e:	8c 83       	std	Y+4, r24	; 0x04
     c30:	1a 83       	std	Y+2, r17	; 0x02
     c32:	09 83       	std	Y+1, r16	; 0x01
     c34:	8f ef       	ldi	r24, 0xFF	; 255
     c36:	9f e7       	ldi	r25, 0x7F	; 127
     c38:	9e 83       	std	Y+6, r25	; 0x06
     c3a:	8d 83       	std	Y+5, r24	; 0x05
     c3c:	ae 01       	movw	r20, r28
     c3e:	47 5e       	subi	r20, 0xE7	; 231
     c40:	5f 4f       	sbci	r21, 0xFF	; 255
     c42:	6f 89       	ldd	r22, Y+23	; 0x17
     c44:	78 8d       	ldd	r23, Y+24	; 0x18
     c46:	ce 01       	movw	r24, r28
     c48:	01 96       	adiw	r24, 0x01	; 1
     c4a:	08 d0       	rcall	.+16     	; 0xc5c <vfprintf>
     c4c:	ef 81       	ldd	r30, Y+7	; 0x07
     c4e:	f8 85       	ldd	r31, Y+8	; 0x08
     c50:	e0 0f       	add	r30, r16
     c52:	f1 1f       	adc	r31, r17
     c54:	10 82       	st	Z, r1
     c56:	2e 96       	adiw	r28, 0x0e	; 14
     c58:	e4 e0       	ldi	r30, 0x04	; 4
     c5a:	93 c2       	rjmp	.+1318   	; 0x1182 <__epilogue_restores__+0x1c>

00000c5c <vfprintf>:
     c5c:	ac e0       	ldi	r26, 0x0C	; 12
     c5e:	b0 e0       	ldi	r27, 0x00	; 0
     c60:	e3 e3       	ldi	r30, 0x33	; 51
     c62:	f6 e0       	ldi	r31, 0x06	; 6
     c64:	64 c2       	rjmp	.+1224   	; 0x112e <__prologue_saves__>
     c66:	7c 01       	movw	r14, r24
     c68:	6b 01       	movw	r12, r22
     c6a:	8a 01       	movw	r16, r20
     c6c:	fc 01       	movw	r30, r24
     c6e:	17 82       	std	Z+7, r1	; 0x07
     c70:	16 82       	std	Z+6, r1	; 0x06
     c72:	83 81       	ldd	r24, Z+3	; 0x03
     c74:	81 ff       	sbrs	r24, 1
     c76:	b0 c1       	rjmp	.+864    	; 0xfd8 <vfprintf+0x37c>
     c78:	ce 01       	movw	r24, r28
     c7a:	01 96       	adiw	r24, 0x01	; 1
     c7c:	4c 01       	movw	r8, r24
     c7e:	f7 01       	movw	r30, r14
     c80:	93 81       	ldd	r25, Z+3	; 0x03
     c82:	f6 01       	movw	r30, r12
     c84:	93 fd       	sbrc	r25, 3
     c86:	85 91       	lpm	r24, Z+
     c88:	93 ff       	sbrs	r25, 3
     c8a:	81 91       	ld	r24, Z+
     c8c:	6f 01       	movw	r12, r30
     c8e:	88 23       	and	r24, r24
     c90:	09 f4       	brne	.+2      	; 0xc94 <vfprintf+0x38>
     c92:	9e c1       	rjmp	.+828    	; 0xfd0 <vfprintf+0x374>
     c94:	85 32       	cpi	r24, 0x25	; 37
     c96:	39 f4       	brne	.+14     	; 0xca6 <vfprintf+0x4a>
     c98:	93 fd       	sbrc	r25, 3
     c9a:	85 91       	lpm	r24, Z+
     c9c:	93 ff       	sbrs	r25, 3
     c9e:	81 91       	ld	r24, Z+
     ca0:	6f 01       	movw	r12, r30
     ca2:	85 32       	cpi	r24, 0x25	; 37
     ca4:	21 f4       	brne	.+8      	; 0xcae <vfprintf+0x52>
     ca6:	b7 01       	movw	r22, r14
     ca8:	90 e0       	ldi	r25, 0x00	; 0
     caa:	b1 d1       	rcall	.+866    	; 0x100e <fputc>
     cac:	e8 cf       	rjmp	.-48     	; 0xc7e <vfprintf+0x22>
     cae:	51 2c       	mov	r5, r1
     cb0:	31 2c       	mov	r3, r1
     cb2:	20 e0       	ldi	r18, 0x00	; 0
     cb4:	20 32       	cpi	r18, 0x20	; 32
     cb6:	a0 f4       	brcc	.+40     	; 0xce0 <vfprintf+0x84>
     cb8:	8b 32       	cpi	r24, 0x2B	; 43
     cba:	69 f0       	breq	.+26     	; 0xcd6 <vfprintf+0x7a>
     cbc:	30 f4       	brcc	.+12     	; 0xcca <vfprintf+0x6e>
     cbe:	80 32       	cpi	r24, 0x20	; 32
     cc0:	59 f0       	breq	.+22     	; 0xcd8 <vfprintf+0x7c>
     cc2:	83 32       	cpi	r24, 0x23	; 35
     cc4:	69 f4       	brne	.+26     	; 0xce0 <vfprintf+0x84>
     cc6:	20 61       	ori	r18, 0x10	; 16
     cc8:	2c c0       	rjmp	.+88     	; 0xd22 <vfprintf+0xc6>
     cca:	8d 32       	cpi	r24, 0x2D	; 45
     ccc:	39 f0       	breq	.+14     	; 0xcdc <vfprintf+0x80>
     cce:	80 33       	cpi	r24, 0x30	; 48
     cd0:	39 f4       	brne	.+14     	; 0xce0 <vfprintf+0x84>
     cd2:	21 60       	ori	r18, 0x01	; 1
     cd4:	26 c0       	rjmp	.+76     	; 0xd22 <vfprintf+0xc6>
     cd6:	22 60       	ori	r18, 0x02	; 2
     cd8:	24 60       	ori	r18, 0x04	; 4
     cda:	23 c0       	rjmp	.+70     	; 0xd22 <vfprintf+0xc6>
     cdc:	28 60       	ori	r18, 0x08	; 8
     cde:	21 c0       	rjmp	.+66     	; 0xd22 <vfprintf+0xc6>
     ce0:	27 fd       	sbrc	r18, 7
     ce2:	27 c0       	rjmp	.+78     	; 0xd32 <vfprintf+0xd6>
     ce4:	30 ed       	ldi	r19, 0xD0	; 208
     ce6:	38 0f       	add	r19, r24
     ce8:	3a 30       	cpi	r19, 0x0A	; 10
     cea:	78 f4       	brcc	.+30     	; 0xd0a <vfprintf+0xae>
     cec:	26 ff       	sbrs	r18, 6
     cee:	06 c0       	rjmp	.+12     	; 0xcfc <vfprintf+0xa0>
     cf0:	fa e0       	ldi	r31, 0x0A	; 10
     cf2:	5f 9e       	mul	r5, r31
     cf4:	30 0d       	add	r19, r0
     cf6:	11 24       	eor	r1, r1
     cf8:	53 2e       	mov	r5, r19
     cfa:	13 c0       	rjmp	.+38     	; 0xd22 <vfprintf+0xc6>
     cfc:	8a e0       	ldi	r24, 0x0A	; 10
     cfe:	38 9e       	mul	r3, r24
     d00:	30 0d       	add	r19, r0
     d02:	11 24       	eor	r1, r1
     d04:	33 2e       	mov	r3, r19
     d06:	20 62       	ori	r18, 0x20	; 32
     d08:	0c c0       	rjmp	.+24     	; 0xd22 <vfprintf+0xc6>
     d0a:	8e 32       	cpi	r24, 0x2E	; 46
     d0c:	21 f4       	brne	.+8      	; 0xd16 <vfprintf+0xba>
     d0e:	26 fd       	sbrc	r18, 6
     d10:	5f c1       	rjmp	.+702    	; 0xfd0 <vfprintf+0x374>
     d12:	20 64       	ori	r18, 0x40	; 64
     d14:	06 c0       	rjmp	.+12     	; 0xd22 <vfprintf+0xc6>
     d16:	8c 36       	cpi	r24, 0x6C	; 108
     d18:	11 f4       	brne	.+4      	; 0xd1e <vfprintf+0xc2>
     d1a:	20 68       	ori	r18, 0x80	; 128
     d1c:	02 c0       	rjmp	.+4      	; 0xd22 <vfprintf+0xc6>
     d1e:	88 36       	cpi	r24, 0x68	; 104
     d20:	41 f4       	brne	.+16     	; 0xd32 <vfprintf+0xd6>
     d22:	f6 01       	movw	r30, r12
     d24:	93 fd       	sbrc	r25, 3
     d26:	85 91       	lpm	r24, Z+
     d28:	93 ff       	sbrs	r25, 3
     d2a:	81 91       	ld	r24, Z+
     d2c:	6f 01       	movw	r12, r30
     d2e:	81 11       	cpse	r24, r1
     d30:	c1 cf       	rjmp	.-126    	; 0xcb4 <vfprintf+0x58>
     d32:	98 2f       	mov	r25, r24
     d34:	9f 7d       	andi	r25, 0xDF	; 223
     d36:	95 54       	subi	r25, 0x45	; 69
     d38:	93 30       	cpi	r25, 0x03	; 3
     d3a:	28 f4       	brcc	.+10     	; 0xd46 <vfprintf+0xea>
     d3c:	0c 5f       	subi	r16, 0xFC	; 252
     d3e:	1f 4f       	sbci	r17, 0xFF	; 255
     d40:	ff e3       	ldi	r31, 0x3F	; 63
     d42:	f9 83       	std	Y+1, r31	; 0x01
     d44:	0d c0       	rjmp	.+26     	; 0xd60 <vfprintf+0x104>
     d46:	83 36       	cpi	r24, 0x63	; 99
     d48:	31 f0       	breq	.+12     	; 0xd56 <vfprintf+0xfa>
     d4a:	83 37       	cpi	r24, 0x73	; 115
     d4c:	71 f0       	breq	.+28     	; 0xd6a <vfprintf+0x10e>
     d4e:	83 35       	cpi	r24, 0x53	; 83
     d50:	09 f0       	breq	.+2      	; 0xd54 <vfprintf+0xf8>
     d52:	57 c0       	rjmp	.+174    	; 0xe02 <vfprintf+0x1a6>
     d54:	21 c0       	rjmp	.+66     	; 0xd98 <vfprintf+0x13c>
     d56:	f8 01       	movw	r30, r16
     d58:	80 81       	ld	r24, Z
     d5a:	89 83       	std	Y+1, r24	; 0x01
     d5c:	0e 5f       	subi	r16, 0xFE	; 254
     d5e:	1f 4f       	sbci	r17, 0xFF	; 255
     d60:	44 24       	eor	r4, r4
     d62:	43 94       	inc	r4
     d64:	51 2c       	mov	r5, r1
     d66:	54 01       	movw	r10, r8
     d68:	14 c0       	rjmp	.+40     	; 0xd92 <vfprintf+0x136>
     d6a:	38 01       	movw	r6, r16
     d6c:	f2 e0       	ldi	r31, 0x02	; 2
     d6e:	6f 0e       	add	r6, r31
     d70:	71 1c       	adc	r7, r1
     d72:	f8 01       	movw	r30, r16
     d74:	a0 80       	ld	r10, Z
     d76:	b1 80       	ldd	r11, Z+1	; 0x01
     d78:	26 ff       	sbrs	r18, 6
     d7a:	03 c0       	rjmp	.+6      	; 0xd82 <vfprintf+0x126>
     d7c:	65 2d       	mov	r22, r5
     d7e:	70 e0       	ldi	r23, 0x00	; 0
     d80:	02 c0       	rjmp	.+4      	; 0xd86 <vfprintf+0x12a>
     d82:	6f ef       	ldi	r22, 0xFF	; 255
     d84:	7f ef       	ldi	r23, 0xFF	; 255
     d86:	c5 01       	movw	r24, r10
     d88:	2c 87       	std	Y+12, r18	; 0x0c
     d8a:	36 d1       	rcall	.+620    	; 0xff8 <strnlen>
     d8c:	2c 01       	movw	r4, r24
     d8e:	83 01       	movw	r16, r6
     d90:	2c 85       	ldd	r18, Y+12	; 0x0c
     d92:	2f 77       	andi	r18, 0x7F	; 127
     d94:	22 2e       	mov	r2, r18
     d96:	16 c0       	rjmp	.+44     	; 0xdc4 <vfprintf+0x168>
     d98:	38 01       	movw	r6, r16
     d9a:	f2 e0       	ldi	r31, 0x02	; 2
     d9c:	6f 0e       	add	r6, r31
     d9e:	71 1c       	adc	r7, r1
     da0:	f8 01       	movw	r30, r16
     da2:	a0 80       	ld	r10, Z
     da4:	b1 80       	ldd	r11, Z+1	; 0x01
     da6:	26 ff       	sbrs	r18, 6
     da8:	03 c0       	rjmp	.+6      	; 0xdb0 <vfprintf+0x154>
     daa:	65 2d       	mov	r22, r5
     dac:	70 e0       	ldi	r23, 0x00	; 0
     dae:	02 c0       	rjmp	.+4      	; 0xdb4 <vfprintf+0x158>
     db0:	6f ef       	ldi	r22, 0xFF	; 255
     db2:	7f ef       	ldi	r23, 0xFF	; 255
     db4:	c5 01       	movw	r24, r10
     db6:	2c 87       	std	Y+12, r18	; 0x0c
     db8:	14 d1       	rcall	.+552    	; 0xfe2 <strnlen_P>
     dba:	2c 01       	movw	r4, r24
     dbc:	2c 85       	ldd	r18, Y+12	; 0x0c
     dbe:	20 68       	ori	r18, 0x80	; 128
     dc0:	22 2e       	mov	r2, r18
     dc2:	83 01       	movw	r16, r6
     dc4:	23 fc       	sbrc	r2, 3
     dc6:	19 c0       	rjmp	.+50     	; 0xdfa <vfprintf+0x19e>
     dc8:	83 2d       	mov	r24, r3
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	48 16       	cp	r4, r24
     dce:	59 06       	cpc	r5, r25
     dd0:	a0 f4       	brcc	.+40     	; 0xdfa <vfprintf+0x19e>
     dd2:	b7 01       	movw	r22, r14
     dd4:	80 e2       	ldi	r24, 0x20	; 32
     dd6:	90 e0       	ldi	r25, 0x00	; 0
     dd8:	1a d1       	rcall	.+564    	; 0x100e <fputc>
     dda:	3a 94       	dec	r3
     ddc:	f5 cf       	rjmp	.-22     	; 0xdc8 <vfprintf+0x16c>
     dde:	f5 01       	movw	r30, r10
     de0:	27 fc       	sbrc	r2, 7
     de2:	85 91       	lpm	r24, Z+
     de4:	27 fe       	sbrs	r2, 7
     de6:	81 91       	ld	r24, Z+
     de8:	5f 01       	movw	r10, r30
     dea:	b7 01       	movw	r22, r14
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	0f d1       	rcall	.+542    	; 0x100e <fputc>
     df0:	31 10       	cpse	r3, r1
     df2:	3a 94       	dec	r3
     df4:	f1 e0       	ldi	r31, 0x01	; 1
     df6:	4f 1a       	sub	r4, r31
     df8:	51 08       	sbc	r5, r1
     dfa:	41 14       	cp	r4, r1
     dfc:	51 04       	cpc	r5, r1
     dfe:	79 f7       	brne	.-34     	; 0xdde <vfprintf+0x182>
     e00:	de c0       	rjmp	.+444    	; 0xfbe <vfprintf+0x362>
     e02:	84 36       	cpi	r24, 0x64	; 100
     e04:	11 f0       	breq	.+4      	; 0xe0a <vfprintf+0x1ae>
     e06:	89 36       	cpi	r24, 0x69	; 105
     e08:	31 f5       	brne	.+76     	; 0xe56 <vfprintf+0x1fa>
     e0a:	f8 01       	movw	r30, r16
     e0c:	27 ff       	sbrs	r18, 7
     e0e:	07 c0       	rjmp	.+14     	; 0xe1e <vfprintf+0x1c2>
     e10:	60 81       	ld	r22, Z
     e12:	71 81       	ldd	r23, Z+1	; 0x01
     e14:	82 81       	ldd	r24, Z+2	; 0x02
     e16:	93 81       	ldd	r25, Z+3	; 0x03
     e18:	0c 5f       	subi	r16, 0xFC	; 252
     e1a:	1f 4f       	sbci	r17, 0xFF	; 255
     e1c:	08 c0       	rjmp	.+16     	; 0xe2e <vfprintf+0x1d2>
     e1e:	60 81       	ld	r22, Z
     e20:	71 81       	ldd	r23, Z+1	; 0x01
     e22:	88 27       	eor	r24, r24
     e24:	77 fd       	sbrc	r23, 7
     e26:	80 95       	com	r24
     e28:	98 2f       	mov	r25, r24
     e2a:	0e 5f       	subi	r16, 0xFE	; 254
     e2c:	1f 4f       	sbci	r17, 0xFF	; 255
     e2e:	2f 76       	andi	r18, 0x6F	; 111
     e30:	b2 2e       	mov	r11, r18
     e32:	97 ff       	sbrs	r25, 7
     e34:	09 c0       	rjmp	.+18     	; 0xe48 <vfprintf+0x1ec>
     e36:	90 95       	com	r25
     e38:	80 95       	com	r24
     e3a:	70 95       	com	r23
     e3c:	61 95       	neg	r22
     e3e:	7f 4f       	sbci	r23, 0xFF	; 255
     e40:	8f 4f       	sbci	r24, 0xFF	; 255
     e42:	9f 4f       	sbci	r25, 0xFF	; 255
     e44:	20 68       	ori	r18, 0x80	; 128
     e46:	b2 2e       	mov	r11, r18
     e48:	2a e0       	ldi	r18, 0x0A	; 10
     e4a:	30 e0       	ldi	r19, 0x00	; 0
     e4c:	a4 01       	movw	r20, r8
     e4e:	11 d1       	rcall	.+546    	; 0x1072 <__ultoa_invert>
     e50:	a8 2e       	mov	r10, r24
     e52:	a8 18       	sub	r10, r8
     e54:	43 c0       	rjmp	.+134    	; 0xedc <vfprintf+0x280>
     e56:	85 37       	cpi	r24, 0x75	; 117
     e58:	29 f4       	brne	.+10     	; 0xe64 <vfprintf+0x208>
     e5a:	2f 7e       	andi	r18, 0xEF	; 239
     e5c:	b2 2e       	mov	r11, r18
     e5e:	2a e0       	ldi	r18, 0x0A	; 10
     e60:	30 e0       	ldi	r19, 0x00	; 0
     e62:	25 c0       	rjmp	.+74     	; 0xeae <vfprintf+0x252>
     e64:	f2 2f       	mov	r31, r18
     e66:	f9 7f       	andi	r31, 0xF9	; 249
     e68:	bf 2e       	mov	r11, r31
     e6a:	8f 36       	cpi	r24, 0x6F	; 111
     e6c:	c1 f0       	breq	.+48     	; 0xe9e <vfprintf+0x242>
     e6e:	18 f4       	brcc	.+6      	; 0xe76 <vfprintf+0x21a>
     e70:	88 35       	cpi	r24, 0x58	; 88
     e72:	79 f0       	breq	.+30     	; 0xe92 <vfprintf+0x236>
     e74:	ad c0       	rjmp	.+346    	; 0xfd0 <vfprintf+0x374>
     e76:	80 37       	cpi	r24, 0x70	; 112
     e78:	19 f0       	breq	.+6      	; 0xe80 <vfprintf+0x224>
     e7a:	88 37       	cpi	r24, 0x78	; 120
     e7c:	21 f0       	breq	.+8      	; 0xe86 <vfprintf+0x22a>
     e7e:	a8 c0       	rjmp	.+336    	; 0xfd0 <vfprintf+0x374>
     e80:	2f 2f       	mov	r18, r31
     e82:	20 61       	ori	r18, 0x10	; 16
     e84:	b2 2e       	mov	r11, r18
     e86:	b4 fe       	sbrs	r11, 4
     e88:	0d c0       	rjmp	.+26     	; 0xea4 <vfprintf+0x248>
     e8a:	8b 2d       	mov	r24, r11
     e8c:	84 60       	ori	r24, 0x04	; 4
     e8e:	b8 2e       	mov	r11, r24
     e90:	09 c0       	rjmp	.+18     	; 0xea4 <vfprintf+0x248>
     e92:	24 ff       	sbrs	r18, 4
     e94:	0a c0       	rjmp	.+20     	; 0xeaa <vfprintf+0x24e>
     e96:	9f 2f       	mov	r25, r31
     e98:	96 60       	ori	r25, 0x06	; 6
     e9a:	b9 2e       	mov	r11, r25
     e9c:	06 c0       	rjmp	.+12     	; 0xeaa <vfprintf+0x24e>
     e9e:	28 e0       	ldi	r18, 0x08	; 8
     ea0:	30 e0       	ldi	r19, 0x00	; 0
     ea2:	05 c0       	rjmp	.+10     	; 0xeae <vfprintf+0x252>
     ea4:	20 e1       	ldi	r18, 0x10	; 16
     ea6:	30 e0       	ldi	r19, 0x00	; 0
     ea8:	02 c0       	rjmp	.+4      	; 0xeae <vfprintf+0x252>
     eaa:	20 e1       	ldi	r18, 0x10	; 16
     eac:	32 e0       	ldi	r19, 0x02	; 2
     eae:	f8 01       	movw	r30, r16
     eb0:	b7 fe       	sbrs	r11, 7
     eb2:	07 c0       	rjmp	.+14     	; 0xec2 <vfprintf+0x266>
     eb4:	60 81       	ld	r22, Z
     eb6:	71 81       	ldd	r23, Z+1	; 0x01
     eb8:	82 81       	ldd	r24, Z+2	; 0x02
     eba:	93 81       	ldd	r25, Z+3	; 0x03
     ebc:	0c 5f       	subi	r16, 0xFC	; 252
     ebe:	1f 4f       	sbci	r17, 0xFF	; 255
     ec0:	06 c0       	rjmp	.+12     	; 0xece <vfprintf+0x272>
     ec2:	60 81       	ld	r22, Z
     ec4:	71 81       	ldd	r23, Z+1	; 0x01
     ec6:	80 e0       	ldi	r24, 0x00	; 0
     ec8:	90 e0       	ldi	r25, 0x00	; 0
     eca:	0e 5f       	subi	r16, 0xFE	; 254
     ecc:	1f 4f       	sbci	r17, 0xFF	; 255
     ece:	a4 01       	movw	r20, r8
     ed0:	d0 d0       	rcall	.+416    	; 0x1072 <__ultoa_invert>
     ed2:	a8 2e       	mov	r10, r24
     ed4:	a8 18       	sub	r10, r8
     ed6:	fb 2d       	mov	r31, r11
     ed8:	ff 77       	andi	r31, 0x7F	; 127
     eda:	bf 2e       	mov	r11, r31
     edc:	b6 fe       	sbrs	r11, 6
     ede:	0b c0       	rjmp	.+22     	; 0xef6 <vfprintf+0x29a>
     ee0:	2b 2d       	mov	r18, r11
     ee2:	2e 7f       	andi	r18, 0xFE	; 254
     ee4:	a5 14       	cp	r10, r5
     ee6:	50 f4       	brcc	.+20     	; 0xefc <vfprintf+0x2a0>
     ee8:	b4 fe       	sbrs	r11, 4
     eea:	0a c0       	rjmp	.+20     	; 0xf00 <vfprintf+0x2a4>
     eec:	b2 fc       	sbrc	r11, 2
     eee:	08 c0       	rjmp	.+16     	; 0xf00 <vfprintf+0x2a4>
     ef0:	2b 2d       	mov	r18, r11
     ef2:	2e 7e       	andi	r18, 0xEE	; 238
     ef4:	05 c0       	rjmp	.+10     	; 0xf00 <vfprintf+0x2a4>
     ef6:	7a 2c       	mov	r7, r10
     ef8:	2b 2d       	mov	r18, r11
     efa:	03 c0       	rjmp	.+6      	; 0xf02 <vfprintf+0x2a6>
     efc:	7a 2c       	mov	r7, r10
     efe:	01 c0       	rjmp	.+2      	; 0xf02 <vfprintf+0x2a6>
     f00:	75 2c       	mov	r7, r5
     f02:	24 ff       	sbrs	r18, 4
     f04:	0d c0       	rjmp	.+26     	; 0xf20 <vfprintf+0x2c4>
     f06:	fe 01       	movw	r30, r28
     f08:	ea 0d       	add	r30, r10
     f0a:	f1 1d       	adc	r31, r1
     f0c:	80 81       	ld	r24, Z
     f0e:	80 33       	cpi	r24, 0x30	; 48
     f10:	11 f4       	brne	.+4      	; 0xf16 <vfprintf+0x2ba>
     f12:	29 7e       	andi	r18, 0xE9	; 233
     f14:	09 c0       	rjmp	.+18     	; 0xf28 <vfprintf+0x2cc>
     f16:	22 ff       	sbrs	r18, 2
     f18:	06 c0       	rjmp	.+12     	; 0xf26 <vfprintf+0x2ca>
     f1a:	73 94       	inc	r7
     f1c:	73 94       	inc	r7
     f1e:	04 c0       	rjmp	.+8      	; 0xf28 <vfprintf+0x2cc>
     f20:	82 2f       	mov	r24, r18
     f22:	86 78       	andi	r24, 0x86	; 134
     f24:	09 f0       	breq	.+2      	; 0xf28 <vfprintf+0x2cc>
     f26:	73 94       	inc	r7
     f28:	23 fd       	sbrc	r18, 3
     f2a:	12 c0       	rjmp	.+36     	; 0xf50 <vfprintf+0x2f4>
     f2c:	20 ff       	sbrs	r18, 0
     f2e:	06 c0       	rjmp	.+12     	; 0xf3c <vfprintf+0x2e0>
     f30:	5a 2c       	mov	r5, r10
     f32:	73 14       	cp	r7, r3
     f34:	18 f4       	brcc	.+6      	; 0xf3c <vfprintf+0x2e0>
     f36:	53 0c       	add	r5, r3
     f38:	57 18       	sub	r5, r7
     f3a:	73 2c       	mov	r7, r3
     f3c:	73 14       	cp	r7, r3
     f3e:	60 f4       	brcc	.+24     	; 0xf58 <vfprintf+0x2fc>
     f40:	b7 01       	movw	r22, r14
     f42:	80 e2       	ldi	r24, 0x20	; 32
     f44:	90 e0       	ldi	r25, 0x00	; 0
     f46:	2c 87       	std	Y+12, r18	; 0x0c
     f48:	62 d0       	rcall	.+196    	; 0x100e <fputc>
     f4a:	73 94       	inc	r7
     f4c:	2c 85       	ldd	r18, Y+12	; 0x0c
     f4e:	f6 cf       	rjmp	.-20     	; 0xf3c <vfprintf+0x2e0>
     f50:	73 14       	cp	r7, r3
     f52:	10 f4       	brcc	.+4      	; 0xf58 <vfprintf+0x2fc>
     f54:	37 18       	sub	r3, r7
     f56:	01 c0       	rjmp	.+2      	; 0xf5a <vfprintf+0x2fe>
     f58:	31 2c       	mov	r3, r1
     f5a:	24 ff       	sbrs	r18, 4
     f5c:	11 c0       	rjmp	.+34     	; 0xf80 <vfprintf+0x324>
     f5e:	b7 01       	movw	r22, r14
     f60:	80 e3       	ldi	r24, 0x30	; 48
     f62:	90 e0       	ldi	r25, 0x00	; 0
     f64:	2c 87       	std	Y+12, r18	; 0x0c
     f66:	53 d0       	rcall	.+166    	; 0x100e <fputc>
     f68:	2c 85       	ldd	r18, Y+12	; 0x0c
     f6a:	22 ff       	sbrs	r18, 2
     f6c:	16 c0       	rjmp	.+44     	; 0xf9a <vfprintf+0x33e>
     f6e:	21 ff       	sbrs	r18, 1
     f70:	03 c0       	rjmp	.+6      	; 0xf78 <vfprintf+0x31c>
     f72:	88 e5       	ldi	r24, 0x58	; 88
     f74:	90 e0       	ldi	r25, 0x00	; 0
     f76:	02 c0       	rjmp	.+4      	; 0xf7c <vfprintf+0x320>
     f78:	88 e7       	ldi	r24, 0x78	; 120
     f7a:	90 e0       	ldi	r25, 0x00	; 0
     f7c:	b7 01       	movw	r22, r14
     f7e:	0c c0       	rjmp	.+24     	; 0xf98 <vfprintf+0x33c>
     f80:	82 2f       	mov	r24, r18
     f82:	86 78       	andi	r24, 0x86	; 134
     f84:	51 f0       	breq	.+20     	; 0xf9a <vfprintf+0x33e>
     f86:	21 fd       	sbrc	r18, 1
     f88:	02 c0       	rjmp	.+4      	; 0xf8e <vfprintf+0x332>
     f8a:	80 e2       	ldi	r24, 0x20	; 32
     f8c:	01 c0       	rjmp	.+2      	; 0xf90 <vfprintf+0x334>
     f8e:	8b e2       	ldi	r24, 0x2B	; 43
     f90:	27 fd       	sbrc	r18, 7
     f92:	8d e2       	ldi	r24, 0x2D	; 45
     f94:	b7 01       	movw	r22, r14
     f96:	90 e0       	ldi	r25, 0x00	; 0
     f98:	3a d0       	rcall	.+116    	; 0x100e <fputc>
     f9a:	a5 14       	cp	r10, r5
     f9c:	30 f4       	brcc	.+12     	; 0xfaa <vfprintf+0x34e>
     f9e:	b7 01       	movw	r22, r14
     fa0:	80 e3       	ldi	r24, 0x30	; 48
     fa2:	90 e0       	ldi	r25, 0x00	; 0
     fa4:	34 d0       	rcall	.+104    	; 0x100e <fputc>
     fa6:	5a 94       	dec	r5
     fa8:	f8 cf       	rjmp	.-16     	; 0xf9a <vfprintf+0x33e>
     faa:	aa 94       	dec	r10
     fac:	f4 01       	movw	r30, r8
     fae:	ea 0d       	add	r30, r10
     fb0:	f1 1d       	adc	r31, r1
     fb2:	80 81       	ld	r24, Z
     fb4:	b7 01       	movw	r22, r14
     fb6:	90 e0       	ldi	r25, 0x00	; 0
     fb8:	2a d0       	rcall	.+84     	; 0x100e <fputc>
     fba:	a1 10       	cpse	r10, r1
     fbc:	f6 cf       	rjmp	.-20     	; 0xfaa <vfprintf+0x34e>
     fbe:	33 20       	and	r3, r3
     fc0:	09 f4       	brne	.+2      	; 0xfc4 <vfprintf+0x368>
     fc2:	5d ce       	rjmp	.-838    	; 0xc7e <vfprintf+0x22>
     fc4:	b7 01       	movw	r22, r14
     fc6:	80 e2       	ldi	r24, 0x20	; 32
     fc8:	90 e0       	ldi	r25, 0x00	; 0
     fca:	21 d0       	rcall	.+66     	; 0x100e <fputc>
     fcc:	3a 94       	dec	r3
     fce:	f7 cf       	rjmp	.-18     	; 0xfbe <vfprintf+0x362>
     fd0:	f7 01       	movw	r30, r14
     fd2:	86 81       	ldd	r24, Z+6	; 0x06
     fd4:	97 81       	ldd	r25, Z+7	; 0x07
     fd6:	02 c0       	rjmp	.+4      	; 0xfdc <vfprintf+0x380>
     fd8:	8f ef       	ldi	r24, 0xFF	; 255
     fda:	9f ef       	ldi	r25, 0xFF	; 255
     fdc:	2c 96       	adiw	r28, 0x0c	; 12
     fde:	e2 e1       	ldi	r30, 0x12	; 18
     fe0:	c2 c0       	rjmp	.+388    	; 0x1166 <__epilogue_restores__>

00000fe2 <strnlen_P>:
     fe2:	fc 01       	movw	r30, r24
     fe4:	05 90       	lpm	r0, Z+
     fe6:	61 50       	subi	r22, 0x01	; 1
     fe8:	70 40       	sbci	r23, 0x00	; 0
     fea:	01 10       	cpse	r0, r1
     fec:	d8 f7       	brcc	.-10     	; 0xfe4 <strnlen_P+0x2>
     fee:	80 95       	com	r24
     ff0:	90 95       	com	r25
     ff2:	8e 0f       	add	r24, r30
     ff4:	9f 1f       	adc	r25, r31
     ff6:	08 95       	ret

00000ff8 <strnlen>:
     ff8:	fc 01       	movw	r30, r24
     ffa:	61 50       	subi	r22, 0x01	; 1
     ffc:	70 40       	sbci	r23, 0x00	; 0
     ffe:	01 90       	ld	r0, Z+
    1000:	01 10       	cpse	r0, r1
    1002:	d8 f7       	brcc	.-10     	; 0xffa <strnlen+0x2>
    1004:	80 95       	com	r24
    1006:	90 95       	com	r25
    1008:	8e 0f       	add	r24, r30
    100a:	9f 1f       	adc	r25, r31
    100c:	08 95       	ret

0000100e <fputc>:
    100e:	0f 93       	push	r16
    1010:	1f 93       	push	r17
    1012:	cf 93       	push	r28
    1014:	df 93       	push	r29
    1016:	18 2f       	mov	r17, r24
    1018:	09 2f       	mov	r16, r25
    101a:	eb 01       	movw	r28, r22
    101c:	8b 81       	ldd	r24, Y+3	; 0x03
    101e:	81 fd       	sbrc	r24, 1
    1020:	03 c0       	rjmp	.+6      	; 0x1028 <fputc+0x1a>
    1022:	8f ef       	ldi	r24, 0xFF	; 255
    1024:	9f ef       	ldi	r25, 0xFF	; 255
    1026:	20 c0       	rjmp	.+64     	; 0x1068 <fputc+0x5a>
    1028:	82 ff       	sbrs	r24, 2
    102a:	10 c0       	rjmp	.+32     	; 0x104c <fputc+0x3e>
    102c:	4e 81       	ldd	r20, Y+6	; 0x06
    102e:	5f 81       	ldd	r21, Y+7	; 0x07
    1030:	2c 81       	ldd	r18, Y+4	; 0x04
    1032:	3d 81       	ldd	r19, Y+5	; 0x05
    1034:	42 17       	cp	r20, r18
    1036:	53 07       	cpc	r21, r19
    1038:	7c f4       	brge	.+30     	; 0x1058 <fputc+0x4a>
    103a:	e8 81       	ld	r30, Y
    103c:	f9 81       	ldd	r31, Y+1	; 0x01
    103e:	9f 01       	movw	r18, r30
    1040:	2f 5f       	subi	r18, 0xFF	; 255
    1042:	3f 4f       	sbci	r19, 0xFF	; 255
    1044:	39 83       	std	Y+1, r19	; 0x01
    1046:	28 83       	st	Y, r18
    1048:	10 83       	st	Z, r17
    104a:	06 c0       	rjmp	.+12     	; 0x1058 <fputc+0x4a>
    104c:	e8 85       	ldd	r30, Y+8	; 0x08
    104e:	f9 85       	ldd	r31, Y+9	; 0x09
    1050:	81 2f       	mov	r24, r17
    1052:	09 95       	icall
    1054:	89 2b       	or	r24, r25
    1056:	29 f7       	brne	.-54     	; 0x1022 <fputc+0x14>
    1058:	2e 81       	ldd	r18, Y+6	; 0x06
    105a:	3f 81       	ldd	r19, Y+7	; 0x07
    105c:	2f 5f       	subi	r18, 0xFF	; 255
    105e:	3f 4f       	sbci	r19, 0xFF	; 255
    1060:	3f 83       	std	Y+7, r19	; 0x07
    1062:	2e 83       	std	Y+6, r18	; 0x06
    1064:	81 2f       	mov	r24, r17
    1066:	90 2f       	mov	r25, r16
    1068:	df 91       	pop	r29
    106a:	cf 91       	pop	r28
    106c:	1f 91       	pop	r17
    106e:	0f 91       	pop	r16
    1070:	08 95       	ret

00001072 <__ultoa_invert>:
    1072:	fa 01       	movw	r30, r20
    1074:	aa 27       	eor	r26, r26
    1076:	28 30       	cpi	r18, 0x08	; 8
    1078:	51 f1       	breq	.+84     	; 0x10ce <__ultoa_invert+0x5c>
    107a:	20 31       	cpi	r18, 0x10	; 16
    107c:	81 f1       	breq	.+96     	; 0x10de <__ultoa_invert+0x6c>
    107e:	e8 94       	clt
    1080:	6f 93       	push	r22
    1082:	6e 7f       	andi	r22, 0xFE	; 254
    1084:	6e 5f       	subi	r22, 0xFE	; 254
    1086:	7f 4f       	sbci	r23, 0xFF	; 255
    1088:	8f 4f       	sbci	r24, 0xFF	; 255
    108a:	9f 4f       	sbci	r25, 0xFF	; 255
    108c:	af 4f       	sbci	r26, 0xFF	; 255
    108e:	b1 e0       	ldi	r27, 0x01	; 1
    1090:	3e d0       	rcall	.+124    	; 0x110e <__ultoa_invert+0x9c>
    1092:	b4 e0       	ldi	r27, 0x04	; 4
    1094:	3c d0       	rcall	.+120    	; 0x110e <__ultoa_invert+0x9c>
    1096:	67 0f       	add	r22, r23
    1098:	78 1f       	adc	r23, r24
    109a:	89 1f       	adc	r24, r25
    109c:	9a 1f       	adc	r25, r26
    109e:	a1 1d       	adc	r26, r1
    10a0:	68 0f       	add	r22, r24
    10a2:	79 1f       	adc	r23, r25
    10a4:	8a 1f       	adc	r24, r26
    10a6:	91 1d       	adc	r25, r1
    10a8:	a1 1d       	adc	r26, r1
    10aa:	6a 0f       	add	r22, r26
    10ac:	71 1d       	adc	r23, r1
    10ae:	81 1d       	adc	r24, r1
    10b0:	91 1d       	adc	r25, r1
    10b2:	a1 1d       	adc	r26, r1
    10b4:	20 d0       	rcall	.+64     	; 0x10f6 <__ultoa_invert+0x84>
    10b6:	09 f4       	brne	.+2      	; 0x10ba <__ultoa_invert+0x48>
    10b8:	68 94       	set
    10ba:	3f 91       	pop	r19
    10bc:	2a e0       	ldi	r18, 0x0A	; 10
    10be:	26 9f       	mul	r18, r22
    10c0:	11 24       	eor	r1, r1
    10c2:	30 19       	sub	r19, r0
    10c4:	30 5d       	subi	r19, 0xD0	; 208
    10c6:	31 93       	st	Z+, r19
    10c8:	de f6       	brtc	.-74     	; 0x1080 <__ultoa_invert+0xe>
    10ca:	cf 01       	movw	r24, r30
    10cc:	08 95       	ret
    10ce:	46 2f       	mov	r20, r22
    10d0:	47 70       	andi	r20, 0x07	; 7
    10d2:	40 5d       	subi	r20, 0xD0	; 208
    10d4:	41 93       	st	Z+, r20
    10d6:	b3 e0       	ldi	r27, 0x03	; 3
    10d8:	0f d0       	rcall	.+30     	; 0x10f8 <__ultoa_invert+0x86>
    10da:	c9 f7       	brne	.-14     	; 0x10ce <__ultoa_invert+0x5c>
    10dc:	f6 cf       	rjmp	.-20     	; 0x10ca <__ultoa_invert+0x58>
    10de:	46 2f       	mov	r20, r22
    10e0:	4f 70       	andi	r20, 0x0F	; 15
    10e2:	40 5d       	subi	r20, 0xD0	; 208
    10e4:	4a 33       	cpi	r20, 0x3A	; 58
    10e6:	18 f0       	brcs	.+6      	; 0x10ee <__ultoa_invert+0x7c>
    10e8:	49 5d       	subi	r20, 0xD9	; 217
    10ea:	31 fd       	sbrc	r19, 1
    10ec:	40 52       	subi	r20, 0x20	; 32
    10ee:	41 93       	st	Z+, r20
    10f0:	02 d0       	rcall	.+4      	; 0x10f6 <__ultoa_invert+0x84>
    10f2:	a9 f7       	brne	.-22     	; 0x10de <__ultoa_invert+0x6c>
    10f4:	ea cf       	rjmp	.-44     	; 0x10ca <__ultoa_invert+0x58>
    10f6:	b4 e0       	ldi	r27, 0x04	; 4
    10f8:	a6 95       	lsr	r26
    10fa:	97 95       	ror	r25
    10fc:	87 95       	ror	r24
    10fe:	77 95       	ror	r23
    1100:	67 95       	ror	r22
    1102:	ba 95       	dec	r27
    1104:	c9 f7       	brne	.-14     	; 0x10f8 <__ultoa_invert+0x86>
    1106:	00 97       	sbiw	r24, 0x00	; 0
    1108:	61 05       	cpc	r22, r1
    110a:	71 05       	cpc	r23, r1
    110c:	08 95       	ret
    110e:	9b 01       	movw	r18, r22
    1110:	ac 01       	movw	r20, r24
    1112:	0a 2e       	mov	r0, r26
    1114:	06 94       	lsr	r0
    1116:	57 95       	ror	r21
    1118:	47 95       	ror	r20
    111a:	37 95       	ror	r19
    111c:	27 95       	ror	r18
    111e:	ba 95       	dec	r27
    1120:	c9 f7       	brne	.-14     	; 0x1114 <__ultoa_invert+0xa2>
    1122:	62 0f       	add	r22, r18
    1124:	73 1f       	adc	r23, r19
    1126:	84 1f       	adc	r24, r20
    1128:	95 1f       	adc	r25, r21
    112a:	a0 1d       	adc	r26, r0
    112c:	08 95       	ret

0000112e <__prologue_saves__>:
    112e:	2f 92       	push	r2
    1130:	3f 92       	push	r3
    1132:	4f 92       	push	r4
    1134:	5f 92       	push	r5
    1136:	6f 92       	push	r6
    1138:	7f 92       	push	r7
    113a:	8f 92       	push	r8
    113c:	9f 92       	push	r9
    113e:	af 92       	push	r10
    1140:	bf 92       	push	r11
    1142:	cf 92       	push	r12
    1144:	df 92       	push	r13
    1146:	ef 92       	push	r14
    1148:	ff 92       	push	r15
    114a:	0f 93       	push	r16
    114c:	1f 93       	push	r17
    114e:	cf 93       	push	r28
    1150:	df 93       	push	r29
    1152:	cd b7       	in	r28, 0x3d	; 61
    1154:	de b7       	in	r29, 0x3e	; 62
    1156:	ca 1b       	sub	r28, r26
    1158:	db 0b       	sbc	r29, r27
    115a:	0f b6       	in	r0, 0x3f	; 63
    115c:	f8 94       	cli
    115e:	de bf       	out	0x3e, r29	; 62
    1160:	0f be       	out	0x3f, r0	; 63
    1162:	cd bf       	out	0x3d, r28	; 61
    1164:	09 94       	ijmp

00001166 <__epilogue_restores__>:
    1166:	2a 88       	ldd	r2, Y+18	; 0x12
    1168:	39 88       	ldd	r3, Y+17	; 0x11
    116a:	48 88       	ldd	r4, Y+16	; 0x10
    116c:	5f 84       	ldd	r5, Y+15	; 0x0f
    116e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1170:	7d 84       	ldd	r7, Y+13	; 0x0d
    1172:	8c 84       	ldd	r8, Y+12	; 0x0c
    1174:	9b 84       	ldd	r9, Y+11	; 0x0b
    1176:	aa 84       	ldd	r10, Y+10	; 0x0a
    1178:	b9 84       	ldd	r11, Y+9	; 0x09
    117a:	c8 84       	ldd	r12, Y+8	; 0x08
    117c:	df 80       	ldd	r13, Y+7	; 0x07
    117e:	ee 80       	ldd	r14, Y+6	; 0x06
    1180:	fd 80       	ldd	r15, Y+5	; 0x05
    1182:	0c 81       	ldd	r16, Y+4	; 0x04
    1184:	1b 81       	ldd	r17, Y+3	; 0x03
    1186:	aa 81       	ldd	r26, Y+2	; 0x02
    1188:	b9 81       	ldd	r27, Y+1	; 0x01
    118a:	ce 0f       	add	r28, r30
    118c:	d1 1d       	adc	r29, r1
    118e:	0f b6       	in	r0, 0x3f	; 63
    1190:	f8 94       	cli
    1192:	de bf       	out	0x3e, r29	; 62
    1194:	0f be       	out	0x3f, r0	; 63
    1196:	cd bf       	out	0x3d, r28	; 61
    1198:	ed 01       	movw	r28, r26
    119a:	08 95       	ret

0000119c <_exit>:
    119c:	f8 94       	cli

0000119e <__stop_program>:
    119e:	ff cf       	rjmp	.-2      	; 0x119e <__stop_program>
